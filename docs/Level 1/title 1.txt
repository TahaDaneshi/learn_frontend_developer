آموزش اچ تی ام ال : شما هم اکنون در سطح یک هستید : HTML :  
===========================================================================================
    1- که در سطح ۲ تدریس میشوند آشنا میشید CSS در این سطح برخی مباحث
    2-
    3-
===========================================================================================
0) معرفی اچ تی ام ال و معنی و مخفف چیه - چه کاربردی دارد - چقدر زروری است 
Hypertext Markup language = زبان نشانه گزاری فرامتن - حساسیت به حروف
===========================================================================================
1) xhtml & html
    xhtml مخفف : Extensible Hypertext Markup language 
    xhtml مبتنی بر XML 
    html مبتنی بر SGML
    xhtml حساس به حروف بزرگ و کوچک است
    html حساسا به بزرگ و کوچک بودن حروف ندارد
    xhtml نیاز به ساختار دقیق و استاندارد
    html سخت گیر نیست حتی موارد حایتی را هم ننویسید ایراد نمیگیرد
    xhtml خطا ها باعث نمایش نشدن صفحه میشوند
    html مروگر خطا ها را نادیده میگیرد
    پیشنهاد ما: html
===========================================================================================
2) نصب اکستنشن های مورد نیاز
    حتما نصب شوند: HTML Preview - Auto Rename Tag - Live Server - Color Highlight
    نیازی نیست که حتما نصب شوند: Image Preview - indent-rainbow - Material Icon Theme
===========================================================================================
3) tag دستورات
    - Opening tag = تگ هایی که نیاز به تعیین مرز جدا کننده ندارن
    <tagName >
    - Closing tag =  دستوراتی که باید هم باز هم بسته آنها تعیین شده باشد و کانتنت بین مرز هاش قرار میگیرد 
    <tagName > </tagName>
    - Content = محتوایی است که درون تگ ها قرار میگیرد مانند متن و تصویر و ...
===========================================================================================
4) tags 1
special tag = DOCTYPE html
    tag 1 = html
    tag 2 = head
    tag 3 = body
    tag 4 = title
    tag 5 = img
    tag 6 = meta
  <!DOCTYPE html>
  <html> پایه کل سایت 
    <head> معمور اتصالات
        <meta charset='UTF-8'> برای پشتیبانی سایت از تمامی کارارکتر ها
        <title>[اسم موضوع دلخواه]</title> موضوع سایت رو نایش میدهد
    </head>

    <body> بدنه ساختمان
        <img> برای گزاشتن عکس
    </body>
  </html>
  =-= meta
    مخفف metadata = عنصر فراداده
    کار: را در بر میگیرد html اطلاعات سند 
    مکان: <head> در بخش هد قار میگیرد
    نحوه استفاده:
        1- Description: نمایش خلاصه صفحه در نتایج جستجو
            <meta name="description" content="توضیح مختصر و جذاب">
        2- Viewport: تنظیم نمایش صفحه در دستگاه های مختلف
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            SEO= ضروری
        3- charset: کاراکتر ها صفحه encoding مشخص کردن
            <meta charset="UTF-8">
            SEO= ضروری
        4- ...
===========================================================================================
5) attributes 1 صفت ها
    attribute 1 = src
    attribute 2 = alt
    attribute 3 = title
    attribute 4 = style
    attribute 5 = width
    attribute 6 = height
    attribute 7 = dir
  صفتی برای قرار دادن موارد ضاحری برای تگ ها
  صفت ها درون بخش باز تگ نوشته میشوند با یک فاصله بعد از اسم تگ
  سینتکس نوشتن: attributeName="" or attributeName=''
  =-= src
    برای دادن محل یک فایل یا یک آدرس به تگ به آن داده میشود
    مثال: <img src='f:taha\new\tree.png'> الان عکسی که ما بهش دیم را توی سایت نمایش میدهد
  =-= alt
    مخفف alternative = جایگزین
    کاربرد:
        ۱ - بریا زمانی است که تصویر بارگذاری نمیشود نمایش داده میشود به جای عکس
        ۲ - وقتی مررگر تصویر را غیرفعال کرده است 
        ۳ - برای کاربران نابینا که از صفحه خوان استفاده میکنند
    تگ های که میتواند این صفت را بگیرند:
        ۱ = اصلی ترین تگ img
        ۲ = قرار دارد map درون تگ area تگ 
        ۳ = باشد image نوعش برار input اگر 
    نکات استفاده =
        ۱ = توصیف دقیق تصویر
        ۲ = بین ۵ تا ۱۵ کلمه باشد
        ۳ = از کمنات کلیدی استفاده شود
        ۴ = اجتناب از کلمات تکرار
            ازکلمه تصویر و یا عکس استفاه نکنید چون موتور جستوجو خود میداند که این یک تصویر است
        ۵ = خالی استفاده نکنید alt بریا تصاویر از 
    SEO =
        ۱ = درک بهتر محتوا : به موتورجستجو کمک میکند محتوای تصویر را بفهمد
        ۲ = ایندکس شدن : تصاویر ممکن است در جستوجو تصویر گوگل ظاهر شوند
  =-= title
    معنی title = عنوان یا توضیح است
    نحوه کار: اطلاعات اضافی درباره یک عنصر ارائه می دهد که  معمولا به صورت راهنمای ابزاری
    (tooltip) = راهنمای ابزاری
    هنگام هاور کردن موس نمایش داده میشود
    (hover) = هاور
    تگ هایی که از این استفاده میکنند =
        - a لینک ها - img تصاویر - abbr مخفف ها
        نکته: تقریبا همه تگ ها توانایی گرفتن این صفت را دارند
    کاربرد و مکان استفاه:
        1 - لینک ها: برای توضیح مقصد لینک
        2 - تصاویر: اطلاعات تکمیلی درباره تصویر
        3 - مخفف ها: بریا توضیح مخفف ها
        4 - عناصر فرم یا گرفتن اطلاعات: راهنمای کاربر برای فیلد های ورودی
    نکات استفاده:
        1 - عدم تکرار محتوا: نباید دقیقا محتوای لینک باشد یا آلت تصویر
        2 - توصیفی : دقیقا توضیح  دهد که عنصر چیست یا چه کاری انجام میدهد
        3 - مختصر و مفید باشد
    SEO = تاثیر غیر مستقیم
        1 - درک بهتر محتوا: به موتور های جستوجو کمک میکند رابطه بین عناصر را درک کند
        2 - لینک ها: به موتور های جستوجو کمک میکند تا ارتباط بین صفحات را بفهمد
    توجه! برخلاف آلت برای تصاویر که ضروری است، تایتل اختیاری است و استفاده بیش از حد آن ممکن است تجربه کاربر را خراب کند
  =-= style
    برای نوشتن کد های سی اس اس اینلاین در اچ تی ام ال استفاده میشود و تمام دستودات سی اس اس را میشود نوشت توش
    مثال: <body style='color:green;'>Taha Daneshi</body> متن سبز نمایش داده میشود
  =-= width
    برای دادن طول به یک عنصر سایت استفاده میشود و مثل همتای خود در سی اس اس است اما اینجا اگر فرمت را براش وارد نکنیم پیش فرض پیکسل قرار میدهد
    مثال: <img src='./tree.png' width='40'> تصویر به طول 40px نمایش داده میشود
    توجه: اگر طول و عرض برای تصویر مشخص نشود خودکار اندازه ها از روی خود تصویر زده میشود
  =-= height
    برای دادن عرض به یک عنصر سایت استفاده میشود و مثل همتای خود در سی اس اس است اما اینجا اگر فرمت را براش وارد نکنیم پیش فرض پیکسل قرار میدهد
    مثال: <img src='./tree.png' height='40'> تصویر به عرض 40px نمایش داده میشود
  =-= dir
    برای تعیین راست چین بودن یا چپ چین بودن نوشتن متن استفاده میشود
    مقادیر =
        1 - ltr : چپ به راست و پیشفر left to right
        2 - rtl : راست به چپ right to left
        3- auto : 
    مثال: <body dir='ltr'>My name is Taha Daneshi</body>
    توجه: زمانی که برای عنصر بادی جهت متن را مشخص میکنیم اگر جهت را به صراحت برای عناصر متن درونش تعیین نکرده باشیم اونها هم همون جهت را میگیرند
===========================================================================================
6) comment
    سینتکس نوشتن: <!-- -->
    کاربرد:
    1 - برای یادداشت کردن چیزی برای زمان توسعه وب
    2 - غیر فعال کردن بخشی از کد
    توجه: متن درونش هیچ نمایش داده نمیشوند
    SEO = بدون تاثیر
    توصیه: همیشه ازش استفاده شود تا بعد بتونید کد را سریع تر توسعه دهید
    در ویژال استودیو کد کلید میانبر دارد: ctrl + /
    نکته: هم تک خطی است و هم یکیش برای چندین خط کد کافیه
===========================================================================================
7) tags 2 - text tags 1
    tag  = h1 to h6
    tag  = p
    tag  = span
  =-= h1 to h6
    مخفف Heading = سرتیتر - عنوان
    کاربرد: برای ساختار دهی سلسله مراتب محتوای صفحه استفاده میشود
    closing-Opening و block یک عنصر
    تفاوت اعضای این گروه با هم:
    h1 = مهم ترین عنوان صفحه است
    h2 = زیر عنوان های اصلی
    h3 = زیر مجموعه های h2
    h4 - h5 - h6 = عناوین با اهمیت کمتر
    SEO = 
    1 - استفاده کنید برای موضوع اصلی صفحه h1 همیشه از 
    2 - پرش بین اعداد نکنید h3 سوم h2 دوم h1 سلسله مراتب را رعایت کنید اول 
    3 - بیش از یک بار استفاده نکنید h1 از
    4 - زیاد استفاده نکنید چون تاثیر زیادی روی سعو ندارد و باعث شلوغی صفحه میشود h6 و h5 از 
    توجه! خود کار متن درونشون را بولد یا همون پررنگ میکنند
  =-= p 
    مخفف Paragraph = پاراگراف - بند 
    closing-Opening و block یک عنصر
    کاربرد: برای تعریف یک پاراگراف متنی
    SEO = 
    1 - به موتور جستوجو کمک میکند متن را بهتر درک کند 
    2 - ازش فقط برای قرار دادن متن استفاده کنید نه ساختمان بندی
    3 - از تکرار بیرویه تگ ان درحالی که خالی باشد صرف نظر کنید
    4 - است کلمه کلیدی سایت را استفاده کنید h1 پاراگراف اول که معمولا بعد از 
    نکته: strong - i - b - span درون این تگ میشود تگ های دیگری هم قرار داد مثل
  =-= span
    مخفف span = دامنه یا بازه
    closing-Opening , inline یک عنصر 
    کاربرد: برای استایل دهی بخشی از متن
    ویژگی: بدون تغییر در ساختار درون سایر تگ های متن قرار میگیرد 
    SEO =
    1 - تاثیر مستقیمی ندارد : موتور های جستوجو محتوای درونشو به عنوان بخشی از متن اصلی در تظر   میگیرند
    2 - اگر ازش برای پنهان کردن متن استفاده کنید توسط گوگل جریمه خواهید شد;display:none;
===========================================================================================
8) inspect
 این ابزار کاربردی جزو ابزار هایی است که مرور گر ها برای ما قرار داده شده است
 برای اجرا 1: توی صفحه سایت و دون مروگر روی یکی از عناصر سایت راست کلیک کرده و گزینه اینسپکت را  بزنید تا باز شود
 برای جرا 2: ctrl + shift + i
 میشود پنجره باز شده را به دو صورت افقی یا عمودی قرار داد و بسته به نیاز آن را تنظیم کنید
 تنظیم جهت پنجره:
 روی سه نقطه روی هم کلیک کنید
 Dock side => click on the Icon
 -------------------- Elements ----------------------
 کاربرد 1: برای اینکه اندازه حقیقی و جانبی عناصر را ببینیم
 روش 1 : موس را روی کد اون عنصر سایت قرار میدهیم تا عنصر هایلایت شود
 روش 2: روی گزینه فلش روبه بالا راست که درون نقطه چین مربعی است کلیک کنیم تا فعال شود و روع هر  عنصری که نشانگر موس را قرار دهیم اون هایلایت میشود
 روش دوم برای فعال کردن اون گزینه ctrl + shift + c
 کاربرد 2: میتوان مقادیر اتریبیوت ها و اندازه ها را تغیر داد و نتیجه را به صورت آزمایشی دید  بدون هیچ تغییر کد اصلی
 توجه: تغییرات ما در اینسپکت ذخیره نمیشوند
 -------- Computed
 برخی اندازه های عنصری که هایلایت شده نمایش داده میشوند به دو صورت 1 = جدول 2 = نوشتاری
 برخی از مقادیری که نمایش میدهد عبارت اند از:
 1 - size = اندازه حقیقی عنصر
 2 - padding = اندارزه جانبی درونی
 3 - border = اندازه حاشیه
 4 - margin = اندازه جانبی بیرونی
 5 - position = اندازه جابه جایی
 ------- Styles
 تمام استایل هایی که به هر صورت سی اس اسی چه با کلاس یا ای دی یا به صورت گروهی از تگ ها داده باشید اینجا همشو فهرست میکند حتی اونهایی که مروگر به صورت پیش فرض برای اون عنصر قرار داده است را هم میبینید
 ------ Layout
 تنظیمات مخصوص به لایه بندی سی اس اس گرید و فلکس باکس اینجاست
 برای نمایش گرید لاین ها و ایندکس های فلکس باکس را ببینید از اینجا استفاده کنید
 که تنظیمات هر کدام در بخش هایی به نام های زیر جدا شده اند
 Grid - Flexbox
 ------ Event Listeners
 تمام ایونت هایی که برای این صفحه شما وجود دارد را که با کد جاواسکریپت هستن را نمایش میدهد و حتی شما میتوانید با کلیک روی ان به اون خط از کد در بخش سورس کد روید و آن را حتی تغیر هم دهید اما ذخیره نمیشود.
 ------ Properties
 اینجا برخی از صفت ها که به ماحیت ظاتی عناصر ربط دارند نمایش داده میشود
 مثل: id - href - localName - parentElement - title - dir
 ------------------- Console ------------------------
 این بخش بیشتر برای مدیریت جاواسکریپت است
 میتوانید نتایج console.log() رای ببینید
 برخی کد های جاواسکریپت را همینجا بزنید به صورت آزمایشی ببینید
 اگر خطایی در سایت شما باشد اینجا میبینیدdebug error
 ------------------ Application ---------------------
 بیشتر با دیتا بیس سرو کار دارد
 شما به لوکال استوریج دسترسی داشته و میتوانید ان را پاک کرده حافظشو یا محتوایی درونشو ببینید
 (تحقیق شود دربارش)
 ----------------- Sources ---------------------------
 شما به فایل های پیوستی که به صفحه سایت شما متصل هستند را ببینید 
 مثل: تصاویر - فایل های جاوااسکریپت و سی اس اس و...
 دربخش page
 ---------------- Network -----------------------------
 مواردی از لود شدن صفحه را اینجا میبینید 
 مثل: فایل هایی که لود شدن وضعیت لودشون و نوع آنها اندازه و زمانی که صرف شده تالود شن ترتیب  لودشون
 بخشی است که مقدار دیفالتش No throttling هست اینجا میتونید که سرعت اینترنت ازمایشی تغیر بدید و  با رفرش لود را با اون سرعت مدیرت کنید
===========================================================================================
9) display
    یک استایل یا ویژگی نمایشی است و نوع نمایشی را به ما میگوید
    یک مبحث در سی اس اس است که برای استفاده در اچ تی ام ال باید درون اتریبیوت استایل قرار گرید
    انواع اصلی مقادیرش=
        1 - block
        عنصر تمام عرض موجود را میگیرد و عنصر بعدی در خط جدید قرار میگیرد
        مثالی از چند تگ که این ویژگی را دارند: p - h1 to h6 - div
        2 - inline
        فقط به اندازه محتوایش فضا میگیرد و در یک خط نمایش داده میشود
        توجه! نمیشه به عناصری که این ویژگی را داردن عرض و ارتفاع داد البته برخی هم مثل تصویر کاری نداره به هر  حال کار میکنه
        مثال های از چند تگ که این ویژگی را دارند:  span - b - i - strong
        3 - inline-block 
        مانند اینلاین در یک خط قرار میگیرد اما میتوان به ان عرض و ارتفاع        داد
        4 - none
        عنصر کاملا از صفحه حذف میشود نه فضایی می گیرد و نه دیده میشود
        5 - flex
        برای چیدمان مدیرن و کنترل راحت تر عناصر استفاده میشود
        عناصر درونش خواصیت اینلاین میگیرند و خوش خواصیت بلاک دارد
        
        6 - grid 
        برا چیدمان شبکه ای و دوبعدی کاربرد دارد
        flex / grid باوجودی که جزعی از سی اس اس هست اما اکثرا براشون        دوره های جدا گانه ضبت میشود به دلیل احمیت و حجم
    SEO = 
        1 - تاثیر غیر مستقیمی دارد
        2 - اگر برای پنهان کردن محتوای مهم استفاده کنیم جریمه میشویم اما اگر برای ریسپانسیو سازی باشد اشکالی ندارد
===========================================================================================
10) tags 3 - text tags 2
    tag 8 = br 
    tag 9 = hr
    ----- text tags 2 ----
    tag 10 = strong
    tag 11 = b
    tag 12 = em
    tag 13 = i 
  =-= br
    مخفف break line = شکستن خط
    Opening و block یک عنصر
    کاربرد:
    ۱ = بریا ایجاد فاصله بین عناصر با قرار دادنش بین عناصر
    ۲ = برای رفتن متن به خط بعدی = enter
    قابلیت این را دارد که درون تگ های متنی قرار گیرد
    SEO = تاثیر منفی ندارد
    به جای اینکه چندین بار ازش استفاده کنید از سی اس اس استفاده کنید
  =-= hr
    مخفف Horizontal Rule = خط افقی
    Opening و block یک عنصر
    کاربرد: یک خط افقی جدا کننده در قفحه ایجاد میکند.
    SEO = تاثیر مستقیمی ندارد
    بارمعنایی دارد: جدا کردن بخش
  =-= strong
    مخفف strong = قوی / مهم
    closing-Opening و inline یک عنصر
    کاربرد: متن را پررنگ میکند
    بارمعنایی: مهم بودن متن
    SEO =
    1 = به انجین میفهماند که این بخش از متن مهم است واقعا
    2 = بهتره زمانی که واقعا یک کلمه مهم است این را بزنیم و نه فقط برای استفاده بصری باشد
  =-= b 
    مخفف bold = پررنگ
    closing-Opening و inline یک عنصر
    برای پررنگ کردن متن استفاده میشود
    بار معنایی ندارد بر خلاف عنصر مشابهش= strong
    کاربرد: برای زمانی که فقط میخواهیم یک متن به صورت بصری احمیت پیدا کند و نخوایم موتور جستوجو گر روش تمرکز کند
    SEO = تاثیر مستقیمی ندارد
  =-= em
    مخفف Emphasis = تاکید
    closing-Opening و inline یک عنصر
    بارمعنایی: برای تاکید روی متن استفاده میشود
    کاربرد: ایتالیک کردن بخشی از متن باری تاکید روی متن
    SEO = 
    1 - موتور های جستوجو ممکن است به متن توجه بیشتری کنند
    2 - زمانی که متن اهمیت زیادی ندار و فقط میخواهیم ایتالیک شود متن استفاده نشود
  =-= i 
    مخفف italic = ایتالیک / کج
    closing-Opening و inline یک عنصر
    کاربرد: متن را به صورت کج نمایش میدهد
    برخلاف تگ همتای خود بار معنایی ندارد: em
    زمان استفاده =
    1 - عنوان آثار مثل کتاب ، فیلم ، نقاشی که داخل یه متن باشند
    2 - اصطلاحات فنی یا خارجی
    SEO = بدون تعثیر مستقیم ندارد
===========================================================================================
11) tags 4 - form tags 1
    tag 14 = dfn
    tag 15 = abbr
    tag 16 = address
  =-= dfn
    مخفف Definition = تعریف
    closing-Opening و inline یک عنصر
    بارمعنایی: به موتور جستوجو کمک میکند که بفهمد این یک اصطلاحات است
    کاربرد: برای اصطلاحات که در متن های آموزشی یا اصطلاحات تخصصی به کار میرود
    قابلیت ویژه: برای توضیحات اضافه title امکان استفاده از اتریبیوت 
    توجه: وقتی موس میاد روش محتویات درون تایتل نمایش داده میشود به کاربر
    متن را ایتالیک میکند
    توصیه: استفاده برای متن های اموزشی
    SEO = فقط زمان بیان اصطلاحات استفاده شود 
    فرقش با em =
     em برای تاکید
     dfn برای اصطلاحات
     abbr برای مخفف ها استفاده میشود
  =-= abbr
    خفف abbreviation = مخفف
    SEO = 
        1- بهبود درک محتوا برای موتور جستوجو
        2- تجربه کاربر بهتر : با هاور روی متن معنی کامل نمایش داده میشود
    توجه:
        ۱- قرار دادن نادرست : فقط برای کلماتی که مخفف شدن استفاده شود نه هیچ چیزه دیگه
        ۲- استفاده نکردن از عنوان title : حتما از این اتریبیوت استفاده کنید تا کلمه با هاور کاملش نمایش داده شود
    ویژگی ها:
        ۱- هدف: مخفف ها
        ۲- نمایش: زیرخط نقطه چین مسشود
        ۳- نیاز به title : ضروری
        ۴- SEO : کمک به درک مخفف ها
    نکته SEO:
        1- فقط اولین مخفف هارا اینجوری کنید نه اینکه هر جا بودش اینکارو کنید
        2- صفت عنوان را قرار دهید title
  =-= address
    مخفف Address = نشانی
    معنی : مشخص کردن اطلاعات تماس مربوط به نویسنده
    کاربرد:
        1- نشانی فیزیکی : مثال : شهرداری= کهگیلویه، سرفاریاب
        2- اطلاعات تماس دیجیتال : ایمیل ، تلفن
        3- اطلاعات نویسنده : نام و نام خانوادگی
    SEO =
        1- به موتور جستجو کمک میکند تا اطلاعات تماس را بهتر درک کنند
        2- نمایش نتایج بهتر: ممکن است در این بخش گوگل نماسش داده شود
        Knowledge Graph
        3- به رتبه بندی در نقشه گوگل کمک میکند
        توجه:
            1- استفاده در جای نا دستورات: مثل : قرار دادن تاریخ درونش
            2- عدم استفاده از میکرو دینتاها: بهتر است با این ترکیب شود
            schema.org
        ویژگی ها:
            هدف: اطلاعات تماس
            معناشناسی: بله
            نمایش: ایتالیک
            SEO: درک اطلاعات تماس
        روش استفاده:
            1- استفاده در فوتر سایت
            2- ترکیب با میکرو دیتا های schema.org
            3- در تمام صفحات سایت ثابت باشد
            4- از لینک ها قابل کلیک توش استفاده شود
دو تگ منسوخ شده: center - big
===========================================================================================
12) tags 5 - form tags 2
    tag = code
    tag = cite
    tag = del 
    tag = mark
    tag = q 
  =-= code
    مخفف Code = کد
    کاربر: برای نمایش قطعات کد های کامپیوتری در متن
    کاربرد صحیح:
        1- نمایش کد های درون متن
        2- باشد pre نمایش بلوک های کد باید این تگ درون 
    SEO =
        1- به موتور های جستجو کمک میکند که بخش ها کد را تشخیص دهد
        2- تجربه کاربری بهتر: نمایش مجزا و خوانای کد ها
        3- برای مقالات برنامه نویسی و فنی ضروری
    توجه:
        1- استفاده نادرست: نباید برای متن های معمولی استفاده شود
        2- عدم فرمت بندی مناسب: خوانایی کمی دارند pre کد های طولانی بدون
    ویژگی ها:
        هدف: کد منبع
        SEO: کد های برنامه نویسی
    نکته: بهتره که از میکرودیتا ها استفاده شود
        مثال:<pre><code itemprop="programmingLanguage">
         for i in range(5): 
            print(i)
        </code></pre>
  =-= cite
    مخفف Citation = ارجاع / استناد 
    کاربرد: برای عنوان یک اثر خلاقانه مثل= کتاب، فیلم، نقاشی، مقاله
    توجه:
        1- استفاده اشتباح: برای اسامی افراد یا مکان ها استفاده نشود
        2- از میکرو دیتا ها استفاده شود: schema.org
    ویژگی ها:
        هدف: عنوان آثار
        نمایش: ایتالیک
        معناشناسی: ارجاع به اثر
        SEO: کمک به درک معنا 
  =-= del
    Abbreviation(del) {delete} => حذف
    Usage: برای نشان‌دادن متن **حذف‌شده** یا منسوخ در سند استفاده می‌شود. 
    Properties = 
      Display: مرورگرها معمولاً آن را با **خطی روی متن** نمایش می‌دهند
    SEO = 
      1-کم‌اهمیت‌تر**از متن عادی در نظر بگیرند`<del>` موتورهای جستجو ممکن است محتوای داخل  را **
      2- به صورت غیرمستقیم برای SEO مفید است.
    Important Attributes: 1- cite 2- datetime
    Point = 
      1- ترکیب با `<ins>`: معمولاً برای نشان‌دادن محتوای جایگزین، `<del>` و `<ins>` را کنار هم استفاده می‌کنند.
  =-= mark
    Abbreviation{mark} => علامت گذاری یا هایلایت
    Usage:   برای هایلایت کردن بخشی از متن 
    Properties =
      level: inline
      Target: مرجع‌پذیری یا اهمیت موقتی استفاده میشود 
        example 1 =هایلایت کردن کلمات کلیدی در نتایج جستجو
        example 2 = نشان‌دادن تغییرات یا نکات آموزشی در مستندات
      Display: پس‌زمینه زرد
    SEO = 
      1- موتورهای جستجو به محتوای داخل <مارک> اهمیت خاصی نمی‌دهند (مانند متن عادی)<
      2- مفید است SEO استفاده به‌جا می‌تواند تجربه کاربری را بهبود بخشد که به صورت غیرمستقیم برای
      Important Attributes: ندارد
  =-= q 
    Abbreviation (q) {quote} => نقل قوله کوتاه
    Usage:   برای قرار دادن نقل قول کوتاه در متن استفاده می‌شود
    Properties =
      level: inline
      Target: بیان نقل قول
      Display: مرورگرها به طور پیش‌فرض آن را بین علامت نقل قول (" ") قرار می‌دهند 
      Meaning: موتور جستوجو محتوای درونشو به عنان نقل قول شناسایی میکند
    SEO = تأثیر مستقیمی روی رتبه‌بندی ندارد
    Important Attributes: 1- cite (Optional)
    Difference(blockquote) = استفاده میشود (block) برای نقل قول های طولانی و بلاک blockquote است اما (inline) برای نقل قول کوتاه و درون خطی q
===========================================================================================
13) tags 6 - form tags 3
    tag  = meter
    tag  = progress
    tag  = pre
    tag = sup & sub
    tag = blockquote
  =-= meter
    Abbreviation(meter) {Measurement} => سنجش / اندازه گیری
    Usage: برای نمایش یک مقدار اندازه‌گیری شده در یک محدوده مشخص استفاده می‌شود
    Properties:
      level: inline
      Target: نمایش مقادیر عددی در یک محدوده مشخص کاربرد دارد
        example 1 = نمایش میزان پیشرفت یک فرآیند 
        example 2 =   نمایش میزان استفاده از منابع (مثل فضای دیسک یا حافظه)
        example 3 = نمایش رتبه‌بندی یا امتیاز
        example 4 = سطح مهارت در رزومه‌ها
      Meaning: به موتورهای جستجو کمک می‌کند داده‌های عددی را بهتر درک کنند
    SEO =
      1- UX تاثیر مستقیم بر سئو ندارد، اما می‌تواند تجربه کاربری
      را بهبود بخشد
      2- باعث می‌شود محتوای عددی و آماری به صورت بصری و قابل فهم‌تر نمایش داده شود
    Important Attributes: 
      1- value(required) = مقدار فعلی
      2- min(default = 0) = حداقل مقدار
      3- max = حداکثر مقدار
      4- low = مقدار حد پایین
      5- high = مقدار حد بالا
      6- optimum = مقدار بهینه
    Point =
      1- همیشه از این اتریبیوت ها استفاده کنید: value - min - max
      2- استفاده کنید <label> از تگ meter برای توصیف
      3- متن جایگزین برای مواردی که تگ پشتیبانی نمی‌شود ارائه دهید
      4- فقط برای مقادیر واقعی استفاده کنید، نه برای اهداف تزئینی
    Difference(blockquote) =
      1- <progress> برای پیشرفت یک کار نامشخص استفاده می‌شود
       <meter>` برای نمایش مقدار مشخص در یک محدوده شناخته شده استفاده می‌شود
  =-= progress
    Abbreviation {progress} => پیشرفت
    Usage: برای نمایش یک نوار پیشرفت استفاده میشود.
    Properties =
      level: inline
      Target: بیان پیشرفت
      Display: مرورگرها آن را به صورت یک نوار پیشرفت نمایش میدهند.
    SEO = 
      1- تأثیر مستقیمی بر سئو ندارد، چون یک عنصر بصری است
      2- UX میتواند تجربه کاربری 
      را بهبود بخشد که به صورت غیرمستقیم برای سئو مفید است
    Important Attributes: 1- value 2- max 3- form
    Point =
      1- همراه با متن جایگزین: برای اینکه اگر مرورگر پشتیبانی نکرد اون متن نمایش داده بشه
      2- برای دسترسی پذیری aria- استفاده از
  =-= pre
    Abbreviation(pre) {preformatted text} => متن از پیش فرمت شده
    Usage:   برای نمایش متن‌هایی استفاده می‌شود که فضای سفید و شکست خطوط در آنها باید دقیقاً همان‌طور که در کد منبع نوشته شده‌اند حفظ شوند
    Properties =
      level: block
      Target: نمایش متن با همون ساختار نوشته شده در کد
        example 1 = نمایش کدهای برنامه‌نویسی
      Display: با حفظ فاصله ها نمایش داده میشود
      Meaning: اگر برای نمایش کد استفاده شود، ممکن است موتورهای جستجو آن را به عنوان محتوای تخصصی (مثل آموزش برنامه‌نویسی) شناسایی کنند
    SEO =
      1- تأثیر مستقیمی بر سئو ندارد
      2- استفاده میشود <figure> یا <code> بهتر است همراه با توضیحات معنایی مثل 
    Point =
      1- <figcaption> و <figure> عضافه کردن عنوان با
  =-= sup & sub
    Abbreviation(sub) {Subscript} => زیرنویس
    Usage(sub): برای نمایش متن یا نماد به صورت پایین‌تر و کوچک‌تر از خط متن عادی استفاده می‌شود.
    Properties(sub) =
      level: inline
      Target:  نوشتن متن با مکانی پایین تر از حد معمول
        example 1 = فرمول شیمیایی
        example 2 = نماد های ریاضی
        example 3 = شماره گذاری پاورقی ها
      Display:  متن پایین تر از حد معمول قرار میگیرد و کوچک تر
    Abbreviation(sup) {Superscript} => بالانویس
    Usage(sup): برای نمایش متن یا نماد به صورت بالاتر و کوچک‌تر از خط متن عادی استفاده می‌شود.
    Properties(sup) =
      level: inline
      Target: نمایش دادن متن در مکانی بالا تر از حد معمول و کوچک تر
        example 1 = توان در ریاضی
        example 2 = نماد های علمی
        example 3 = ارجاعات به پاورقی
        example 4 = نشانه گذاری علائم تجاری (™, ®)
      Display: مکانی بالاتر و اندازه ای کوچک تر از حالت معمول متن
    Meaning: موتورهای جستجو این تگ‌ها را به عنوان متن عادی تفسیر می‌کنند
    SEO =
      1- تأثیر مستقیم: ندارد 
      2- تأثیر غیرمستقیم: که میتواند به سئو کمک کند UX بهبود خوانایی و تجربه کاربری 
    Point = 
      1- استفاده شود Unicode برای نمادهای خاص (مثل ® یا ™) بهتر است از خود نمادهای
  =-= blockquote
===========================================================================================
14) Attributes 2
    attribute = cite
    attribute = datetime
    attribute = form
  =-= cite
    Abbreviation(cite) {citation} => ارجاع دادن
    Target: این اتریبیوت معمولاً برای مشخص کردن منبع یک نقل‌قول یا اشاره به یک اثر (مانند کتاب، مقاله، وب‌سایت) استفاده می‌شود
      
    Display:
    Meaning:
    Important Tags =
      1 = <blockquote>: برای نقل قول طولانی متون.
      2 = <q>: برای نقل قول‌های کوتاه در متن.
    SEO = تأثیر مستقیمی بر رتبه‌بندی شما ندارد
    SEO Point =
      1- اعتماد و اعتبار: ارائه منابع معتبر کمک می‌کند تا محتوای شما در نظر موتورهای جستجو معتبرتر جلوه کند.
      2- تجربه کاربری: با مشخص کردن منابع، کاربران می‌توانند به راحتی به اطلاعات بیشتری دسترسی پیدا کنند.
      3- ارتباطات معنایی: استفاده صحیح از اتریبیوت‌ها می‌تواند به موتورهای جستجو در درک بهتر محتوای شما کمک کند.
  =-= datetime
    Abbreviation(datetime) {date-time} => تاریخ و زمان
    Target: برای مشخص کردن زمان یا تاریخ معین در تگ‌های مشخصی استفاده می‌شود
    Display:
    Meaning:
    Important Tags =
      1- time
      2- meta
    SEO = تأثیر مثبت دارد
    SEO Point =
      4- فهم بهتر محتوای صفحه: موتورهای جستجو می‌توانند زمان و تاریخ را بهتر درک کنند و در صورت مرتبط بودن، آن را نمایش دهند.
      2- جستجوی زمان‌مند: باعث می‌شود صفحات شما برای جستجوهایی که به زمان‌های خاص مرتبط هستند، بهتر شناسایی شوند.
      3- غنی‌سازی نتایج جستجو: می‌تواند به نتایج جستجو غنی بیفزاید و اطلاعات مفیدی را به کاربر بدهد
  =-= form
    Abbreviation{form} => فرم
    Target: این امکان را می‌دهد که به یک فرم مرتبط شوند و می‌تواند اطلاعات ورودی کاربر را جمع‌آوری کند HTML این اتریبیوت به تگ‌های مختلف
      example 1 = تگ‌های ورودی: تگ‌های اصلی برای ورودی در فرم‌ها
      example 2 = دستورات خاص: قرار داشته باشند <form> استفاده از این اتریبیوت به شما اجازه می‌دهد تگ‌ها را به فرم خاصی متصل کنید، حتی اگر در خارج از تگ 
    Display:
    Meaning:
    Important Tags = در تگ های زیر استفاده می‌شود و به‌طور کلی هدف آن این است که اجزای مختلف یک فرم را سازماندهی کند
      1- section
      2- textarea
      3- input
      4- button
    SEO = غیر مستقیم
    SEO Point =
      1-	سازگاری با موتورهای جستجو: استفاده صحیح از فرم‌ها به کاربران امکان می‌دهد تا تعامل بیشتری با وب‌سایت داشته باشند. همچنین فرم‌های ثبت‌نام و تماس به موتورهای جستجو کمک می‌کند تا اطلاعات تماس و ارتباطات کاربران را بهتر پردازش کنند
      2- داده‌های ساختاریافته: با استفاده از فرم‌ها و جمع‌آوری داده‌ها، می‌توان از داده‌های ساختاریافته استفاده کرد که می‌تواند باعث بهبود در لیست‌های نتایج جستجو شود
===========================================================================================
15) tags 7 - links
    tag = a 
    tag = style
  =-= a
    Abbreviation(a) {Anchor} => لنگر
    Attached file: true
    Usage: بین صفحات یا بخش‌های مختلف  Hyperlinks برای ایجاد پیوندهای ابرمتن 
    Properties =
      level: inline
      Target: لینک دهی
        example 1 = لینک‌دهی به صفحات دیگر (داخلی/خارجی)
        example 2 = id لینک به بخش‌های خاص همان صفحه با
        example 3 = لینک به فایل‌های قابل دانلود
        example 4 = (tel:) یا تلفن (mailto:) لینک به ایمیل
      Display: میکشه (underline) متن درونش به رنگ آبی و یک خط زیرش
      Meaning: موتورهای جستجو از لینک‌ها برای کشف و رتبه‌بندی صفحات استفاده می‌کنند
    Important Attributes = 1-href 2-target 3-rel 4-download
    SEO = ✅ تأثیر مستقیم و قوی دارد
      1- (Link Juice) عامل اصلی در ارتباط صفحات و توزیع ارزش لینک 
      2- لینک‌های داخلی مناسب، ساختار سایت را بهبود می‌بخشند
    SEO Points =
      1- معنادار انتخاب کنید (Anchor Text) متن لنگر
      2- استفاده کنید (rel="nofollow") برای لینک‌های خارجی از 
      3- لینک‌های داخلی هوشمندانه بسازید
    Points = این تگ مهمترین عنصر در ایجاد ساختار وب و یکی از سه پایه‌های اصلی سئو (همراه با محتوا و تگ‌های عنوان) محسوب می‌شود
      1- نسبت متن/لینک: متن لینک باید حداقل 2-3 کلمه باشد
      2- لینک‌های شکسته: هرگز از لینک‌های 404 استفاده نکنید
      3- تعداد مناسب: در هر صفحه 100-150 لینک بیشتر نباشد
      4- اولویت‌دهی: لینک‌های مهم را در محتوای اصلی قرار دهید
  =-= style
    Abbreviation{style} => سبک
    Attached file: true
    Usage: استفاده میشود HTML درون سند CSS این تگ برای تعریف
    Properties =
      level: none
      Target: HTML اعمال استایل‌های بصری به عناصر
        example 1 = رنگ color
        example 2 = فونت font-family
        example 3 = حاشیه border / outline
        ...
      Display: روی تگ ها نمایش داده میشود
    Meaning:
    Important Attributes = 1- media
    SEO = مثبت / منفی
      مثبت
        1- CSS کاهش فایل های خارجی
      منفی
        2- منتقل شود تا صفحه سریعتر بارگذاری شود CSS زیاد باشد بهتر است به فایل style اگر حجم کد های درون
    SEO Point =
      1- استفاده کنید <style> برای استایل‌های مختصر و خاص همان صفحه از
      2-(external) خارجی استفاده کنید CSS از تکرار کد های یکسان در صفحات مختلف خود داری کنید و به جای آن از
      3- media از محدود کردن استایل به رسانه‌های خاص استفاده کنی با
        example = <style media="print"> 
                    body{font-size: 12pt;}
                  </style>
    Point =
      1-(internal) قرار میگیرد <head> (تگ) در قسمت 
      2-(inline) قرار گیرد <tag style=""> (اتریبیوت) مستقیماً روی یک عنصر با ویژگی 
===========================================================================================
16) Attributes 3 - link
    attribute = href
    attribute = target
    attribute = rel
    attribute = download
  =-= href
    Abbreviation(href) {Hypertext Reference} => ارجاع ابر متنی
    Usage: مشخص کننده مقصد یک لینک یا ارتباط بین منابع است 
    Properties =
      Target: تایین مقصد یک لینک
        example 1 = <a> ایجاد پیوند بین صفحات وب
        example 2 = <link> اتصال فایل‌های 
        example 3 = favicon تعریف
        example 4 = <area> ایجاد مناطق قابل کلیک در نقشه‌های تصویری 
      Display: none
    Meaning: "آدرس مرجع" یا "منبع پیوند" 
    Important Tags = 
      1- a (لینک ها)
      2- link (ارتباط با منابع خارجی) 
      3- area (در نقشه های تصویری)
    SEO =
      1- ایجاد ارتباط معنایی بین محتواها
      2- کمک به کراولرها برای کشف محتوای جدید
      3- از طریق لینک‌ها (PageRank) انتقال ارزش صفحه
      4- تجربه کاربری بهتر با ناوبری آسان
    SEO Point =
      1- (error 404) اجتناب از لینک‌های شکسته
    Point =
      1-استفاده شود <a> حتماً از این اتریبیوت در تگ
  =-= target
    Abbreviation() {} =>
    Target:
    Display:
    Meaning:
    Important Tags =
    SEO =
    SEO Point =
    Point =
  =-= rel
    Abbreviation() {} =>
    Target:
    Display:
    Meaning:
    Important Tags =
    SEO =
    SEO Point =
    Point =
  =-= download
    Abbreviation() {} =>
    Target:
    Display:
    Meaning:
    Important Tags =
    SEO =
    SEO Point =
    Point =
===========================================================================================
17) tags - Sections
    tag = nav
    tag = header
    tag = footer
    tag = section 
    tag = article
    tag = div
    tag = datails
    tag = dialog
    tag = summary
  =-= nav
    Abbreviation(nav) {Navigation} => ناوبری
    Attached file: true
    Usage: تعریف بخش ناوبری اصلی صفحه استفاده میشود
    Properties =
      level: block
      Target: بخش ناوبری اصلی
        example 1 = منوهای اصلی سایت
        example 2 = لینک‌های ناوبری مهم
        example 3 = مجموعه‌ای از لینک‌های مرتبط
        example 4 = فهرست محتوای صفحه (در برخی موارد)
      Display: استایل خاصی ندارد
    Meaning: به موتورهای جستجو کمک می‌کند ساختار سایت را بهتر درک کنند
    Important Attributes = 1-aria-label : برای توصیف هدف ناوبری
    SEO = مثبت
      1- معمولاً به عنوان لینک‌های مهم در نظر گرفته می‌شوند <nav> لینک‌های داخل 
      2- برای خاوانندگان صفحه (Accessibility) بهبود دسترسی‌پذیری 
    SEO Point =
      1- فقط برای ناوبری اصلی استفاده شود
      2- حاوی لینک‌های مهم و مرتبط باشد
      3- از تودرتو شدن بیش از حد اجتناب کنید
      4- استفاده شود <li> و <ul> همراه با لیست‌های 
    Point:
      1-  تعداد: معمولا 1-2 تگ در صفحه کافی است
      2-  محتوای مرتبط: فقط برای لینک های ناوبری اصلی استفاده شود
      3-  دسترسی پذیری: استفاده شود aria-label حتماً از
      4- CSS: آن را به منوی مدرن تبدیل کنید CSS میتوانید با
      5- JavaScript: بسازید c(غیر ثابت) میتوانید سایت هایی خاص و فعال
  =-= header
    Abbreviation{header} => سرصفحه
    Attached file: true
    Target: تعریف بخش بالایی و معرفی بخش های پایین تر
      example 1 = فرم جستجو یا اطلاعات تماس است (navbar)معمولاً شامل لوگو، عنوان اصلی صفحه، منوی ناوبری 
      example 2 = استفاده میشود <article> / <section> یا بالای هر <body> می‌تواند در بالای صفحه 
    Meaning: یک بخش معرفی‌کننده یا ناوبری برای محتوای صفحه یا یک بخش خاص
    Important Attributes =
    SEO =
      1- ساختار صفحه را برای موتورهای جستجو خوانا می‌کند.  
      2- محتوا را معنادارتر می‌کند و به خزنده‌ها در درک بهتر صفحه کمک می‌کند Semantic HTML با کمک به
    SEO Point =
      1- قرار دهید (<body> درون) اصلی در بالای صفحه <header> فقط یک
      2- درون آن برای عناوین اصلی/فرعی استفاده کنید h1 to h6 از تگ های
      3- برای منوهای ناوبری اصلی استفاده نمایید <nav> از
      4- در بخش‌های مختلف خودداری کنید <header> از تکرار بی هدف
    Point =
      1-  <section>, <article> استفاده در: جداگانه تعریف کرد <header> می‌توان برای هر بخش مستقل یک
      2- دسترسی‌پذیری: اصلی به ابزارهای کمکی (مانند خوانندگان صفحه) کمک می‌کند <haeder> به role="banner" افزودن
      3- اصلی می‌تواند به بهینه‌سازی کمک کند <header> داخل <h1> قرار دادن کلمات کلیدی در
    Difference(head) = <title> , <meta> حاوی متادیتاهای نامرئی مانند <head> بخشی از محتوای مرئی صفحه است، اما <header>
  =-= footer
    Abbreviation{footer} => پاصفحه
    Attached file: true
    Target: که معمولاً شامل اطلاعات تکمیلی است <article>, <section> بخش پایانی یک صفحه یا یک بخش
      example 1 = در پایین یک مقاله یا بخش: مثلاً اطلاعات نویسنده، تاریخ انتشار، تگ‌های مرتبط.  
      example 2 = معمولاً محتوای تکرارشونده در صفحات مختلف سایت را شامل می‌شود
      example 3 = شامل اطلاعات تماس، لینک‌های مفید، کپی‌رایت، نقشه سایت و (<body> داخل) در پایین صفحه اصلی
    Important Attributes =
    SEO =
      1- برای موتورهای جستجو (Semantic HTML) بهبود ساختار معنایی
      2- نمایش بهتر اطلاعات کپی‌رایت و تاریخ‌ها (مفید برای محتوای به‌روز)
      3- امکان قراردادن لینک‌های داخلی (مثل نقشه سایت) برای ایندکس بهتر
    SEO Point =
      1- قراردهید <body> اصلی در پایین <footer> فقط یک
      2- برای اطلاعات مربوط به همان بخش استفاده کنید <article>, <section> درون <footer> از
      3- از متن کپی‌رایت با سال به‌روز استفاده کنید (مثلاً © 2024)
      4- لینک‌های مهم (مثل "قوانین"، "تماس با ما") را در فوتر اصلی قرار دهید
    Point =
      1- <article> استفاده در: فوتر مقاله می‌تواند شامل بیوگرافی نویسنده، دکمه‌های اشتراک‌گذاری یا لینک‌های مرتبط باشد
      2- دسترسی‌پذیری: به ابزارهای کمکی می‌فهماند که این بخش حاوی اطلاعات پایانی است role="contentinfo"
      3- قراردادن لینک‌های داخلی (مثل "مقالات مرتبط") در فوتر مقاله می‌تواند زمان ماندن کاربر را افزایش دهد
      4- استفاده کنید تا اعتماد موتورهای جستجو جلب شود (Privacy Policy, Terms) از فوتر اصلی برای لینک‌های قانونی
    Warning =
      1- <footer> قراردادن محتوای اصلی صفحه در
      2- استفاده از فوتر برای لینک‌های اسپم (مثل کلمات کلیدی بی‌ربط)
    Difference(header) = معمولاً حاوی اطلاعات فرعی و تکمیلی است، نه محتوای اصلی <footer>
  =-= section
    Abbreviation{section} => بخش
    Attached file: true
    Target: ایجاد یک بخش مستقل و گروه‌بندی شده از محتوا که معمولاً شامل یک عنوان است
      example 1 = گروه‌بندی محتوای مرتبط در صفحه
      example 2 = ایجاد بخش‌های منطقی در مقاله‌های بلند
      example 3 = جداکردن قسمت‌های مختلف یک صفحه (مثل: مقدمه، ویژگی‌ها، تماس)
      example 4 = مناسب برای محتوایی که نیاز به عنوان دارد
    Important Attributes =
      1- aria-labelledby: برای ارتباط با عنصر عنوان‌دهنده
      2- aria-label: وقتی عنوان بصری ندارد
      3- id: برای ایجاد نقاط پرش در صفحه
    SEO =
      1- بهبود ساختار معنایی صفحه برای موتورهای جستجو
      2- کمک به درک بهتر روابط بین بخش‌های محتوا
      3- امکان نمایش بهتر در نتایج جستجو 
    SEO Point =
      1- باشد (Heading) همیشه شامل یک عنوان
      2- برای بخش‌های بدون عنوان واضح استفاده کنید area-label از
      3- برای محتوای مستقل که به تنهایی معنا دارد استفاده شود
      4- پرهیز کنید section از تودرتویی بی‌رویه
    Point =
    Difference(div) = خنثی است <div> معنادار است اما <section>
      اهمیت بیشتری می‌دهند <section> موتورهای جستجو به محتوای
    Difference(article) =
      -  برای محتوای کامل و مستقل (مثل پست وبلاگ) <article>
      -  برای گروه‌بندی مطالب مرتبط <section>
    Warning=
      1- استفاده کنید <br> برای استایل‌دهی استفاده نکنید (برای این کار از  Wrapper به عنوان
  =-= article
    Abbreviation{article} => مقاله/مطلب
    Attached file: true
    Target: ایجاد یک بخش مستقل و خودکفا از محتوا که می‌تواند به تنهایی توزیع یا استفاده شود
      1- پست‌های وبلاگ یا مقالات
      2- خبرهای سایت
      3- کامنت‌های کاربران
      4- ویجت‌های مستقل (مثل ابزارهای محاسباتی)
      5- محصولات در صفحه فروشگاه
    Important Attributes =
      1- id: برای شناسایی منحصر به فرد
      2- aria-labelledby: برای دسترسی‌پذیری
      3- itemscope و itemtype: برای میکرودیتا
    SEO =
      1- نشان‌دهنده محتوای اصلی و باارزش صفحه
      2- کمک به موتورهای جستجو برای شناسایی محتوای قابل ایندکس
      3- امکان نمایش بهتر در نتایج جستجو (Rich Snippets)
      4- بهبود ساختار معنایی برای درک روابط محتوایی
    SEO Point =
      1- فقط برای محتوای واقعاً مستقل استفاده شود
      2- باشد <h1> - <h6> حتماً شامل عنوان معنادار 
      3- مخصوص به خود باشد <header>, <footer> می‌تواند شامل تگ‌های
      4- از تودرتویی بی‌رویه اجتناب کنید
      5- ترکیب شود (Schema.org) با میکرودیتا 
    Point =
      1- داشته باشد (مثل صفحه اصلی وبلاگ) <article> هر صفحه می‌تواند چندین
    Warning =
      1- برای محتوای غیرمستقل (مثل تبلیغات)
      2- برای استایل دهی wrapper به عنوان
      3- برای هر پاراگراف کوچک
    Difference(section) =
      - <article> محتوای کامل و مستقل است (مثل یک پست وبلاگ)
      - <section> فقط گروه‌بندی موضوعی است (مثل یک فصل از مقاله)
  =-= div
    Abbreviation(div) {Division} => بخش‌بندی
    Attached file: true
    Target: یک کانتینر عمومی برای گروه‌بندی و ساختاربندی محتوا که هیچ معنای خاصی ندارد
      example 1 = ایجاد ساختار کلی صفحه (لیاوت)
      example 2 = CSS گروه‌بندی عناصر برای استایل‌دهی با 
      example 3 = جایگزین برای تگ‌های معنایی وقتی معنای مناسب وجود ندارد
    Important Attributes =
      1- class: برای استایل‌دهی و شناسایی
      2- id: برای شناسایی منحصر به فرد
      3- data-*: برای ذخیره داده‌های سفارشی
      4- aria-*: برای بهبود دسترسی‌پذیری
    SEO = تأثیر مستقیمی بر سئو ندارد
      1- استفاده بیش از حد ممکن است ساختار صفحه را برای موتورهای جستجو نامشخص کند
      2- فقدان معنای می‌تواند درک محتوا را برای خزنده‌ها سخت‌تر کند
    SEO Point =
      1- فقط وقتی استفاده شود که تگ معنایی مناسب وجود نداشته باشد
      2- (div soup) اجتناب کنید <div> از تودرتویی بی‌رویه 
      3- استفاده کنید <section> , <article> برای بخش‌های مهم از تگ‌های معنایی مثل
    Point =
      1- ایده‌آل است JavaScript برای کامپوننت‌های پیچیده
      2- بسیار کاربرد دارد Flexbox و CSS Grid ترکیب با
      3- باید به عنوان آخرین راه‌حل در نظر گرفته شود و باید اول از تگ های معنا دار استفاده شود div
    Difference(nav, article, section) = معنای خاصی به موتور جستجو منتقل نمیکند بر خلاف این تگ ها div
  =-= details
    Abbreviation{details} => جزئیات
    Attached file: true
    Target: ایجاد یک عنصر تعاملی که امکان نمایش/مخفی کردن محتوای اضافی را فراهم می‌کند
      example 1 = (expandable sections) ایجاد بخش‌های قابل گسترش
      example 2 = صفحات FAQ پیاده سازی
      example 3 = نمایش توضیحات تکمیلی
      example 4 = گزینه‌های پیشرفته در فرم‌ها
      example 5 = محتوای اختیاری که نیاز به صرفه‌جویی در فضا دارد
    Usage =
      1- منوهای آکاردئونی
      2- توضیحات کدهای برنامه‌نویسی
      3- راهنمای گام به گام
      4- پنل‌های راهنما
      5- تب‌های ساده
    Display:
    Meaning:
    Important Attributes =
      1- open: نمایش محتوا به صورت پیش‌فرض
      2- data-*: برای ذخیره داده‌های سفارشی
      3- aria-expanded: برای دسترسی‌پذیری
    SEO = غیرمستقیم
      1- توسط موتورهای جستجو ایندکس می‌شود <details> محتوای داخل
      2- نمایش داده شود expanded ممکن است در نتایج جستجو به صورت
      3- کمک به سازماندهی محتوای صفحه بدون شلوغی بصری
      4- (UX) بهبود تجربه کاربری
    SEO Point =
      1- استفاده کنید (open) برای محتوای مهم از حالت باز
      2- معنادار استفاده کنید (حاوی کلمات کلیدی) <summary> از
      3- محتوای تکمیلی را بیش از حد طولانی نکنید
      4- قرار دهید <details> در صورت امکان محتوای اصلی را خارج از
      5- استفاده کنید Schema.org markup ها از FAQ برای
    Point =
      1- باشد HTML می‌تواند شامل هر نوع محتوای
      2- هنگام تغییر حالت فراخوانی می‌شود toggle رویداد
      3- می‌توان علامت +/- را تغییر داد CSS با
      4- استفاده کنید aria-expanded برای دسترسی‌پذیری از
    Warning =
      1- قدیمی Edge و IE پشتیبانی محدود در
      2- استایل پیش‌فرض در مرورگرهای مختلف متفاوت است
      3- امکان کنترل کامل تعاملات وجود ندارد
  =-= dialog
    Abbreviation{dialog} => مکالمه/پنجره محاوره‌ای
    Attached file: true
    Target: یا غیرمُدال در صفحه (Modal) یک عنصر برای ایجاد پنجره‌های مُدال
      example 1 = (Confirm/Cancel dialogs) پنجره‌های تأیید/لغو 
      example 2 = فرم‌های ورود اطلاعات
      example 3 = نمایش اطلاعیه‌ها
      example 4 = گالری تصاویر
      example 5 = راهنماهای تعاملی
    Display:
    Meaning:
    Important Attributes =
      1- open: نمایش دیالوگ به صورت پیش‌فرض
      2- returnValue: مقدار بازگشتی از دیالوگ
    SEO = غیرمستقیم
      1- ممکن است در برخی موارد به عنوان محتوای پنهان در نظر گرفته شود
      2- نیاز به مدیریت صحیح برای جلوگیری از مشکلات سئو
      3- توسط موتورهای جستجو ایندکس می‌شود <dialog> محتوای داخل
    SEO Point =
      1- از دکمه‌های مناسب برای باز/بستن استفاده کنید
      2- استفاده نکنید <dialog> برای محتوای حیاتی از 
      3- برای دسترسی‌پذیری بهتر استفاده کنید role="dialog" از
      4- با میکرودیتاها ترکیب شود
      5- قرار ندهید open محتوای مهم را در حالت اولیه
      6- محتوای داخل دیالوگ باید مکمل محتوای اصلی باشد
      7- از قرار دادن محتوای کلیدی فقط در دیالوگ خودداری کنید
      8- محتوای تکراری ممکن است توسط گوگل جریمه شود
    Point =
    Warning =
      1- پشتیبانی محدود در برخی مرورگرهای قدیمی
      2- CSS/JS سفارشی‌سازی محدود بدون 
      3- مدیریت پیچیده حالت‌های پیشرفته
    Usage =
      1- دیالوگ تأیید اقدامات مهم
      2- فرم‌های ورود/ثبت‌نام
      3- نمایش شرایط و ضوابط
      4- راهنمای تعاملی
      5- پنل تنظیمات
  =-= summary
    Abbreviation{summary} => خلاصه/چکیده
    Attached file: true
    Target: ارائه می دهد <details> عنصری که عنوان/خلاصه‌ای برای محتوای
      example 1 = <details> به عنوان عنوان کلیک‌پذیر برای بخش‌های
      example 2 = در آکاردئون‌ها و بخش‌های قابل گسترش
      example 3 = برای نمایش خلاصه محتوای مفصل
      example 4 = ها و راهنمای تعاملیFAQ در
    Display:
    Meaning:
    Important Attributes =
      1- aria-expanded: نشان‌دهنده وضعیت باز/بسته بودن
      2- aria-controls: ارتباط با محتوای کنترل‌شده
      3- data-*: برای ذخیره داده‌های سفارشی
    SEO =
      1- توسط موتورهای جستجو ایندکس می‌شود <summary> متن داخل
      2- کمک به ساختاردهی محتوا برای خزنده‌ها
      3- هاFAQ امکان نمایش بهتر در نتایج جستجو (به ویژه برای
    SEO Point =
      1- از عبارات واضح و حاوی کلمات کلیدی استفاده کنید
      2- طول مناسب (نه خیلی کوتاه، نه خیلی بلند)
      3- <details> هماهنگی با محتوای داخل
      4- هاFAQ برای Schema.org استفاده از میکرودیتاهای 
      5- های مختلف <summary> اجتناب از محتوای تکراری در
    Point =
      1- کار میکند JavaScript بدون نیاز به
      2- سازگار با استانداردهای دسترسی‌پذیری
      3- امکان پذیر است CSS سبک‌دهی کامل با 
      4- بهبود بارگذاری صفحه با مخفی کردن محتوای غیرضروری
    Warning =
      1- IE پشتیبانی محدود در
      2- استایل پیش‌فرض در مرورگرهای مختلف متفاوت است
      3- امکان نیاز دارد CSS (علامت+/-)marker امکان سفارشی‌سازی کامل
    Usage =
      1- راهنمای تعاملی گام به گام
      2- نمایش تغییرات نسخه‌های نرم‌افزار
      3- پنل‌های توضیح کد
      4- لیست ویژگی‌های محصول
      5- مخفی کردن محتوای پیشرفته برای کاربران مبتدی
===========================================================================================
) tags 8 - get information 1
    tag = form
    tag = input
    tag = label
  =-= form
    Abbreviation() {} =>
    Attached file: true
    Properties =
      Target:
      Display:
    Meaning:
    Important Attributes =
    SEO =
    SEO Point =
    Point =
  =-= input
    Abbreviation{input} => ورودی
    Attached file: true
    Properties =
      Target: برای ایجاد فیلدهای تعاملی که کاربر می‌تواند داده وارد کند
        example 1 = دریافت انواع داده‌ها از کاربر (متن، عدد، رمز عبور، تاریخ، فایل و...)
        example 2 = ایجاد کنترل‌های فرم مانند چک‌باکس، رادیو باتن، دکمه و...
        example 3 = بخش اصلی هر فرم تعاملی در وب
      Display: به اشکالی که بتواند اطلاعاتی بگیرد در می آید و بسته به مکان متفاوت است
    Meaning:
    Important Attributes =
      1- type: نوع ورودی 
        - text: ورودی متنی معمولی
        - password: برای رمز عبور (مخفی کردن متن)
        - email: برای آدرس ایمیل (اعتبارسنجی خودکار)
        - number: فقط اعداد
        - date: انتخاب تاریخ
        - file: آپلود فایل
        - checkbox: چک‌باکس
        - radio: دکمه رادیویی
      2- name: نام فیلد برای ارسال به سرور
      3- palceholder: متن راهنما
      4- required: اجباری بودن فیلد
      5- value: مقدار پیش‌فرض
      6- autocomplete: کنترل تکمیل خودکار
      7- inputmode: برای نمایش کیبورد مناسب بهینه‌سازی برای موبایل
    SEO = تأثیر کمی روی سئو دارد
    SEO Point =
      1- مرتبط استفاده کنید <label> همیشه از تگ
      2- برای شناسایی فیلدها استفاده نمایید name از اتریبیوت
      3- استفاده کنید required برای فیلدهای مهم از
      4- را مشخص کنید type نوع صحیح
    Point =
      1- را مطابقت دهید label در for و id همیشه
      2- برای بهبود دسترسی استفاده کنید aria-* از اتریبیوت
      3- regex برای اعتبارسنجی با pattern استفاده از
      4- استفاده کنید type="search" برای جستجو از
      5- برای پیشنهادات استفاده نمایید datalist از
  =-= label
    Abbreviation{label} => برچسب
    Attached file: true
    Properties =
      Target: برای ایجاد برچسب توصیفی برای عناصر ورودی فرم استفاده می‌شود
        example 1 = ارتباط معنایی بین متن توصیفی و عنصر ورودی
        example 2 = (Screen Readers) بهبود دسترسی‌پذیری برای کاربران صفحه‌خوان
        example 3 = افزایش قابلیت استفاده با امکان کلیک روی برچسب برای فعال کردن عنصر ورودی
      Display: متن ساده و بدون تغیر خواصی نمایش داده میشود
    Meaning:
    Important Attributes =
      1- for: id ارتباط با عنصر ورودی با استفاده از مقدار 
      2- form: (باشد form خارج از label) مشخص کردن فرم مرتبط
    SEO =
      مستقیم: بهبود ساختار معنایی صفحه که به خزنده‌ها کمک می‌کند
      غیرمستقیم: که فاکتور مهمی در سئو است (UX) بهبود تجربه کاربری
      - کمک به درک بهتر محتوای فرم توسط موتورهای جستجو
    SEO Point =
      1- عنصر ورودی مطابقت دارد استفاده کنید id که با for همیشه از اتریبیوت
      2- متن برچسب را واضح و توصیفی انتخاب کنید
      3- از کلمات کلیدی مرتبط به صورت طبیعی در متن برچسب استفاده کنید
      4- برچسب‌ها را نزدیک به عناصر مربوطه قرار دهید
    Point =
      1- برچسب‌های واضح باعث کاهش خطاهای ورودی در دستگاه‌های لمسی می‌شوند
      2- دسترسی‌پذیری پیشرفته: در موارد پیچیده aria-* افزودن اتریبیوت‌های
      3- در فرم‌های پیچیده، از ساختار سلسله‌مراتبی برای برچسب‌ها استفاده نمایید
      4- استفاده کنید <label> همراه با <legend> و <fieldset> برای عناصر گروهی مانند رادیو باتن‌ها، از
===========================================================================================
) attributes 4
    attribute = id
    attribute = class
    attribute = name
    attribute = form
    attribute = type
    attribute = min
    attribute = max
    attribute = value
  =-= id
    Abbreviation(id) {identifier} => شناسه
    Attached file: false
    Usage: برای آدرس‌دهی و هدف‌گیری عناصر استفاده می‌شود
    Properties =
      Target: تعریف میکند HTML یک شناسه منحصر به فرد را برای یک عنصر 
        example 1 = (استایل‌دهی خاص) CSS هدف‌گیری با 
        example 2 = (دسترسی به عنصر) JavaScript ارجاع در 
        example 3 = (URL در #id با) لینک‌دهی داخلی
        example 4 = (<label for="id"> مثال) ارتباط با عناصر دیگر 
      Display: none
    Meaning: HTML نشانی یکتای یک عنصر
    Important Tags = HTML همه تگ‌های 
    SEO = غیرمستقیم
      1- کمک به کراولرها: درک بهتر روابط بین عناصر
      2- لینک‌دهی داخلی: برای محتوا anchor links امکان ایجاد
    SEO Point=
      1- استفاده معنادار: (نه random strings) از کلمات توصیفی استفاده کنید 
      2- یکتایی: باید در صفحه منحصر به فرد باشد id هر
      3- عدم استفاده افراطی: فقط برای عناصر مهم استفاده شود
      4- اجتناب از کاراکترهای خاص: فقط حروف، اعداد، خط تیره و زیرخط مجازند
    Point =
      1- در کل سند باید یکتا باشد
      2- (case-sensitive) حساس به حروف بزرگ و کوچک است
  =-= class
    Abbreviation{class} => رده / گروه
    Attached file: false
    Usage: برای گروه‌بندی عناصر مشابه استفاده می‌شود
    Properties =
      Target: یک یا چند نام کلاس را برای عنصر تعریف می‌کند
        1- CSS استایل‌دهی با 
        2- JavaScript هدف‌گیری با 
        3- دسته‌بندی عناصر مشابه
        4- پیاده‌سازی طرح‌های ریسپانسیو
        5- tailwind CSS - Bootstrap مانند CSS استفاده در فریمورک‌های 
      Display: none
    Meaning: 
    Important Tags = HTML تمامی تگ‌های 
    SEO = غیرمستقیم
      1- سرعت بارگذاری: با کلاس‌های بهینه CSS کاهش حجم 
      2- سازگاری موبایل: با کلاس‌های ریسپانسیو مناسب
      3- ساختار واضح: کمک به کراولرها برای درک بهتر صفحه
    SEO Point =
      1- استفاده معنادار: نام‌های توصیفی انتخاب کنید
      2- کاهش تعداد کلاس‌ها: از اضافه‌گویی پرهیز کنید
      3- نام‌گذاری استاندارد: استفاده کنید BEM از روش‌هایی مثل 
    Point =
      1- می‌تواند برای چندین عنصر تکرار شود id برخلاف
    Difference(id) = 
      1- منحصر به فرد است id برای گروه‌های عناصر استفاده می‌شود، در حالی که اما class
      2- میتواند داشته باشد id یک عنصر می‌تواند چندین کلاس داشته باشد اما فقط یک 
      3- بیشتر برای استایل دهی ساتفاده میشود class برای ناوبری در صفحه استفاده می‌شود، در حالی که id
  =-= name
    Abbreviation{name} => نام
    Attached file: true
    Usage: تعریف میکند HTML نامی را برای یک عنصر 
    Properties =
      Target:
        example 1 = (به سرور) عمدتاً برای ارسال داده‌های فرم استفاده می‌شود
        example 2 = در سمت سرور برای شناسایی فیلدهای فرم استفاده می‌شود
        example 3 = JavaScript ارجاع به عناصر در 
        example 4 = embed تعریف پارامترهای 
        example 5 = تعریف نقشه‌های تصویری
        example 6 = ها iframe مشخص کردن فریم‌ها و 
      Display: گاهی در بخش ورودی لینک مرورگر دیده میشود
    Meaning:
    Important Tags = 1-input 2-textarea 3-select 4-button 5-form 6-map 7-meta 8-param 9-iframe 10- object
    SEO = غیرمستقیم
      1- جستجوی داخلی سایت: نام فیلدها می‌تواند به ایندکس شدن کمک کند
      2- فرم‌های تماس: کمک به درک بهتر توسط کراولرها
    SEO Point =
      1- استفاده معنادار: نام‌های توصیفی انتخاب کنید
      2- کلمات کلیدی مرتبط: در فرم های جستجو
      3- یکپارچگی: استفاده ثابت از نام‌ها در کل سایت
      4- اجتناب از نام‌های عمومی: مثل: aaa یا field 1
      5- مطابقت با محتوا: نام فیلد باید با محتوای آن مرتبط باشد
    Point =
      1- نوع متادیتا را مشخص میکند name اتریبیوت meta در تگ
      2- استفاده شود JavaScript میتواند برای ارجاع به فرم در name اتریبیوت input در تگ 
      3- (case-sensitive) در فرم‌ها به حروف بزرگ و کوچک حساس هستند  name مقادیر
      4- گروه رادیو باتن ها را تعریف میکند name اتریبیوت <input type="radio"> در
  =-= form
    Abbreviation{form} => فرم
    Attached file: true
    Target: این امکان را می‌دهد که به یک فرم مرتبط شوند و می‌تواند اطلاعات ورودی کاربر را جمع‌آوری کند HTML به تگ های مختلف
      example 1 = تگ‌های ورودی: تگ‌های اصلی برای ورودی در فرم‌ها، مانند
      example 2 = دستورات خاص: استفاده از این اتریبیوت به شما اجازه می‌دهد تگ‌ها را به فرم خاصی متصل کنید، حتی اگر در خارج از تگ فرم قرار داشته باشد
    Important Tags = select - textarea - input - button
    SEO = غیر مستقیم تأثیر مثبت دارد
      1- داده‌های ساختاریافته: با استفاده از فرم‌ها و جمع‌آوری داده‌ها، می‌توان از داده‌های ساختاریافته استفاده کرد که می‌تواند باعث بهبود در لیست‌های نتایج جستجو شود
  =-= type
    Abbreviation() {} =>
    Attached file: true
    Target:
    Display:
    Meaning:
    Important Tags =
    SEO =
    SEO Point =
    Point =
  =-= min & max
    Abbreviation{min} => حداقل مقدار قابل قبول برای عنصر
    Abbreviation{max} => حداکثر مقدار قابل قبول برای عنصر
    Attached file: true
    Usage: این اتریبیوت‌ها محدوده معتبر برای مقادیر ورودی را تعریف می‌کنند.
    Properties =
      Target: محدوده معتربر برای ورودی ها
        example 1 = اعتبار سنجی فرم ها
        example 2 = (range) ایجاد محدوده برای اسلاید ها
        example 3 = محدود کردن تاریخ های قابل انتخاب
        example 4 = تعریف محدوده برای عناصر اندازه‌گیری
      Display: زمان برخوردن به محدودیت متوجه این اتریبیوت میشویم
    Meaning: حد اقل و حد اکثر
    Important Tags =
      1-input با نوع های زیر
        1- number 2- range 3- date 4- datetime-local 5- month 6- time 7- week
      2-meter ( min & max فقط برای)
      3-progress (max فقط برای)
    SEO = غیرمستقیم
      1-کاهش خطاها: جلوگیری از ارسال فرم‌های نامعتبر
      2- ساختار بهتر: کمک به درک محتوای صفحه
    SEO Point =
      1- بهبود تجربه کاربری
      2- کمک به کراولرها: درک بهتر محدوده مقادیر
      3- فرم‌های بهینه: کمک به ارسال داده‌های معتبر
    Point =
      1- باشد YYYY-MM-DD بیاد به فرمت min/max مقادیر <input type="date"> برای
      2- (پیش فرض = 1) لازم است max فقط <progress> در
      3- برای تعیین میزان افزایش/کاهش استفاده کنید step میتوانید از اتریبیوت 
      4- قابل دسترسی و تغییر هستند JavaScript و CSS این اتریبیوت ها با
  =-= value
    Abbreviation{value} => مقدار
    Attached file: true
    Usage:مقدار اولیه یا پیش‌فرض یک عنصر را تعیین می‌کند
    Properties =
      Target:
        example 1 = تعیین مقدار پیش‌فرض فیلدهای فرم
        example 2 = ارسال داده به سرور هنگام سابمیت فرم
        example 3 = تنظیم مقدار اولیه برای عناصر تعاملی
        example 4 = <embed> و <object> تعریف پارامترها برای 
        example 5 = تعیین مقدار فعلی برای عناصر اندازه‌گیری
      Display: بسته به نوع مکانی که استفاده میشود ممکن است قابل درک باشد
    Meaning: بسته به تگ والد می‌تواند معانی مختلفی داشته باشد
    Important Tags =
      1-input همه انواع این به جز type="image" 
      2-button
      3-option
      4-textarea
      5-select
      6-meter
      7-progress
      8- li برای لیست های مرتب (ol)
      9- param
    SEO = غیرمستقیم
      فرم‌های بهینه: کمک به درک بهتر محتوا توسط کراولرها
      داده‌های ساختاریافته: امکان استفاده در ریچ اسنیپت‌ها
      سرعت بارگذاری: برای مقداردهی اولیه JavaScript کاهش نیاز به اجرای 
    SEO Point =
      1- مقادیر معنادار برای فیلدهای فرم استفاده کنید
      2- کلمات کلیدی مرتبط در مقادیر عناصر مهم
      3- مقادیر منحصر به فرد: برای تگ‌های <meta> و <param>
      4- اجتناب از محتوای تکراری در مقادیر
      5- Schema.org بهینه‌سازی برای میکرودیتا در
    Point =
      1- این اتریبیوت مقدار ارسالی به سرور را تعیین میکند <input type="checkbox"> و <input type="radio"> در
      2- مقدار این اتریبیوت میتواند از محتوای نمایشی متفاوت باشد <option> در
      3- مقدار فعلی را نشان میدهد <meter> & <progress> در
      4-مقدار پارامتر پلاگین را تعیین می‌کند <param> در
      5- شماره لیست را در لیست‌های مرتب تغییر می‌دهد <li> در 
===========================================================================================
) tags 9 - get information 2
    tag = fieldset
    tag = legend
    tag = select
    tag = option
    tag = optgroup
    tag = textarea
  =-= fieldset
    Abbreviation(fieldset) {Field Set} => مجموعه فیلد
    Attached file: true
    Properties =
      Target: برای گروه‌بندی منطقی چندین کنترل فرم در یک جعبه مرزی استفاده می‌شود.
        example 1 = ایجاد گروه‌های معنایی از عناصر فرم مرتبط
        example 2 = بهبود سازماندهی فرم‌های پیچیده
        example 3 = افزایش دسترسی‌پذیری برای کاربران صفحه‌خوان
        example 4 = ایجاد ساختار بصری بهتر برای کاربران
      Display:
    Important Attributes =
      1- disabled : fieldset غیرفعال کردن تمام عناصر داخل 
      2- form : (باشد form خارج از fieldset) مشخص کردن فرم مرتبط
      3- name : نامی برای گروه
    SEO =
      1- مستقیم: بهبود ساختار معنایی صفحه که به خزنده‌ها کمک می‌کند
      2- کمک به درک بهتر روابط بین عناصر فرم توسط موتورهای جستجو
      3- غیرمستقیم: (UX) بهبود تجربه کاربری
    SEO Point =
      1- برای عنوان گروه استفاده شود <legend> همراه با تگ
      2- فقط برای عناصر مرتبط فرم استفاده شود
      3- استفاده کنید <legend> از کلمات کلیدی توصیفی در متن
      4- از تودرتو کردن بیش از حد اجتناب کنید
    Point =
     استفاده بهینه
      1- برای گروه‌بندی رادیو باتن‌ها یا چک‌باکس‌های مرتبط ایده‌آل است
      2- در فرم‌های طولانی برای ایجاد بخش‌های منطقی استفاده شود
     دسترسی‌پذیری
      3- برای توصیف گروه استفاده کنید <legend> همیشه از
      4- برای ارتباط با عناوین پیچیده‌تر استفاده کرد aria-labelledby میتوان از
      5- برای فرم‌های چندمرحله‌ای عالی است
  =-= legend
    Abbreviation{legend} => توضیح یا عنوان
    Attached file: true
    Properties =
      Target: <fieldset> عنوان توصیفی برای گروه‌بندی عناصر در تگ
        example 1 = ارائه توضیح معنایی برای گروهی از کنترل‌های فرم
        example 2 = ایجاد ساختار بصری واضح برای فرم‌های پیچیده
        example 3 = (Screen Readers) بهبود دسترسی‌پذیری برای کاربران صفحه‌خوان 
      Display:
    SEO =
      1- مستقیم: بهبود ساختار معنایی صفحه (به خزنده‌ها کمک می‌کند روابط را درک کنند)
      2- کمک به درک بهتر سازماندهی فرم توسط موتورهای جستجو
    SEO Point =
      1- استفاده شود <fieldset> حتماً همراه با
      2- متن باید مختصر اما توصیفی باشد
      3- از کلمات کلیدی مرتبط به صورت طبیعی استفاده کنید
      4- اجتناب کنید legend داخل HTML از عناصر دیگر
    Point =
     الگوهای استفاده
        1- برای گروه رادیو باتن‌ها (انتخاب یک گزینه)
        2- برای گروه چک‌باکس‌ها (انتخاب چند گزینه)
        3- برای بخش‌بندی فرم‌های بلند
        4- می‌تواند عنوان هر بخش باشد <legend> در فرم‌های چندصفحه‌ای
        5- باید کوتاه (حداکثر یک خط) باشد <legend> متن
        6- داشته باشد <legend> حد اکثر باید یک<fieldset> هر
  =-= select
    Abbreviation{select} => انتخاب
    Attached file: true
    Properties =
      Target: استفاده می‌شود که کاربر می‌تواند از بین چند گزینه یکی را انتخاب کند (منوی کشویی)dropdown menu برای ایجاد یک
        example 1 = ایجاد لیست انتخاب در فرم‌ها
        example 2 = صرفه‌جویی در فضای صفحه هنگام نمایش گزینه‌های زیاد
        example 3 = محدود کردن ورودی کاربر به گزینه‌های از پیش تعریف شده
      Display: dropdown menu (منوی کشویی)
    Important Attributes =
      1- name : نام فیلد برای ارسال به سرور
      2- multiple : امکان انتخاب چندگانه
      3- required : اجباری بودن انتخاب
      4- size : تعداد گزینه‌های قابل نمایش بدون نیاز به اسکرول
      5- disabled : غیرفعال کردن کنترل
      6- autofocus : فوکوس خودکار هنگام بارگذاری صفحه
    SEO = تأثیر کمی روی سئو دارد
    SEO Point =
      1- همراه شود <label> همیشه با تگ
      2- برای شناسایی فیلد استفاده کنید name از اتریبیوت
      3- های معنادار استفاده کنید value برای گزینه‌های مهم از
      4- های توضیحی برای گزینه‌های پیچیده استفاده نمایید option از
    Point =
      1- استفاده کنید تا تعداد مشخصی گزینه نمایش داده شود size برای لیست‌های طولانی از
      2- برای بهبود تجربه صفحه‌خوان‌ها استفاده نمایید aria-* از
      3- برای گزینه‌های کم (کمتر از 5) از رادیو باتن‌ها استفاده کنید
      4- برای گزینه‌های زیاد (بیشتر از 10) از جستجوی قابل فیلتر کردن استفاده نمایید
      5- باید با متن نمایشی متفاوت باشد اگر برای پردازش سرور نیاز دارید value مقدار
  =-= option
    Abbreviation{option} => گزینه
    Attached file: true
    Properties =
      Target:<select> , <optgroup>, <datalist> برای تعریف گزینه‌های قابل انتخاب در عناصر
        example 1 = ایجاد آیتم‌های انتخاب در منوهای کشویی
        example 2 = ارائه گزینه‌های از پیش تعریف شده به کاربر
        example 3 = محدود کردن ورودی‌های کاربر به مقادیر معتبر
      Display:
    Important Attributes =
      1- value: مقدار ارسالی به سرور
      2- selected: انتخاب پیش‌فرض
      3- disabled: غیرفعال کردن گزینه
      4- label: متن جایگزین برای نمایش
    SEO = تأثیر کمی بر سئو دارد
    SEO Point =
      1- استفاده از متن‌های توصیفی و معنادار
      2- با محتوای واقعی در صورت امکان value تطابق 
      3- <optgroup> گروه‌بندی گزینه‌های مرتبط با
      4- استفاده از کلمات کلیدی مرتبط به صورت طبیعی
    Point =
      1- برای جستجو datalist استفاده با
      2- می‌تواند متفاوت از متن نمایش داده شده باشد value مقدار
      3- گزینه‌های طولانی به صورت خودکار بریده می‌شوند
      4- منحصر به فرد داشته باشد value باید یک <option> هر
      5- استفاده کنید disabled برای گزینه‌های غیرقابل انتخاب از
      6- ترتیب گزینه‌ها می‌تواند بر تجربه کاربر تأثیر بگذارد
      7- از گزینه خالی به عنوان راهنما استفاده کنید
  =-= optgroup
    Abbreviation(optgroup) {Option Group} => گروه گزینه
    Attached file: true
    Properties =
      Target: استفاده میشود <select> برای گروه‌بندی گزینه‌های مرتبط در تگ
        example 1 = سازماندهی گزینه‌های مرتبط در منوهای کشویی
        example 2 = بهبود خوانایی و کاربرپسندی لیست‌های طولانی
        example 3 = ایجاد ساختار سلسله‌مراتبی برای گزینه‌ها
      Display:
    Important Attributes =
      1- label (اجباری): عنوان گروه
      2- disabled: غیرفعال کردن کل گروه
      3- class/id: برای استایل‌دهی و شناسایی
    SEO = مستقیم: بهبود ساختار معنایی صفحه (کمک به خزنده‌ها برای درک روابط)
    SEO Point =
      1- استفاده میشود <select> فقط در داخل تگ
      2- برای عنوان‌گذاری معنادار استفاده کنید label از اتریبیوت
      3- گروه‌ها را بر اساس منطق واضح سازماندهی کنید
      4- از کلمات کلیدی مرتبط در برچسب گروه‌ها استفاده نمایید
    Point =
      1- برای اطلاعات اضافی می‌توان استفاده کرد aria-* از اتریبیوت
      2- از برچسب‌های توصیفی استفاده کنید
     محدودیت‌ها و هشدارها
      3- نمی‌توان تودرتو استفاده کرد (گروه داخل گروه مجاز نیست)
      4- در برخی مرورگرهای موبایل ممکن است متفاوت نمایش داده شود
      5- قابل انتخاب نیستند disabled گزینه‌های غیرفعال
     بهترین روش‌ها
      6- حداکثر ۵-۷ گروه ایجاد کنید
      7- هر گروه حداکثر ۷-۱۰ گزینه داشته باشد
      8- برای لیست‌های بسیار طولانی از جستجوی قابل فیلتر استفاده کنید
      9- گروه‌ها را بر اساس دسته‌بندی منطقی سازماندهی کنید
  =-= textarea
    Abbreviation(textarea) {Text Area} => ناحیه متنی
    Attached file: true
    Properties =
      Target: برای ایجاد یک فیلد متنی چندخطی استفاده می‌شود
        example 1 = دریافت ورودی متنی طولانی از کاربر
        example 2 = مناسب برای نظرات، توضیحات، کدها یا هر محتوای چندخطی
        example 3 = قابل استفاده در فرم‌های تماس، سیستم‌های کامنت‌گذاری و ویرایشگرهای ساده
      Display: یک جعبه ورودی متن که کاربر میتونه توش متن های تولانی با جعبه منعتف
    Important Attributes =
      1- rows: تعداد سطرهای قابل مشاهده
      2- cols: تعداد ستون‌ها (عرض بر اساس کاراکتر)
      3- placeholder: متن راهنما
      4- maxlength/minlength`: محدودیت طول متن
      5- readonly: فقط خواندنی
      6- wrap: کنترل نحوه پیچیدن متن
    SEO =
      1- مستقیم: می‌تواند بر سئو تأثیر بگذارد (UGC) تأثیر کمی دارد، اما محتوای تولیدشده کاربر
      2- غیرمستقیم: که فاکتور مهمی در سئو است (Engagement) بهبود تعامل کاربر
      3- امکان ایندکس محتوای تولیدشده توسط کاربر اگر به درستی پیاده‌سازی شود
    SEO Point =
      1- همراه شود <label> همیشه با تگ
      2- برای شناسایی فیلد استفاده کنید name از اتریبیوت
      3- استفاده نمایید required برای فیلدهای اجباری از
      4- برای راهنمایی کاربر استفاده کنید palceholder از
      5- تعیین کنید minlength و maxlength محدودیت‌های مناسب با
    Point =
      1- استفاده کنید تا فاصله‌ها حفظ شود CSS در white-space:pre برای نمایش کد، از
      2- یک ویرایشگرهای کد ساده ایجاد کنید JavaScript میتوانید با
      3- برای فیلد ها کد استفاده کنید spellcheck="false" از
      4- استفاده نمایید wrap="off" برای کدهای طولانی از
===========================================================================================
) attributes 3
    attribute = readonly
    attribute = disabled
    attribute = autofocus
    attribute = required
  =-= readonly
    Abbreviation(readonly) {read-only} => فقط خواندنی
    Target: این اتریبیوت مشخص می‌کند که کاربر نمی‌تواند محتوای عنصر را ویرایش کند، اما هنوز می‌تواند آن را انتخاب کرده یا کپی کند
      example 1 = نمایش اطلاعاتی که کاربر نباید تغییر دهد (مانند کدهای رهگیری، شماره سفارشات)
      example 2 = نمایش مقادیر پیش‌فرضی که کاربر می‌تواند ببیند اما نباید ویرایش کند
      example 3 = در فرم‌هایی که برخی فیلدها باید ثابت بمانند
    Values: none
    Important Tags = input - textarea
    SEO = این اتریبیوت بر ایندکس شدن محتوا تأثیر منفی ندارد
    SEO Point =
      1- معمولا توسط کراولرها خوانده میشود readonly محتوای فیلدهای
      2- بهتر است برای اطلاعات مهم از این اتریبیوت به تنهایی استفاده نکنید، چون کاربران حرفه‌ای می‌توانند آن را دور بزنند
      3- برای امنیت بیشتر بهتر است با اعتبارسنجی سمت سرور ترکیب شود
  =-= disabled
    Abbreviation{disabled} => غیرفعال
    Target: مشخص می‌کند که عنصر باید غیرفعال (غیرقابل تعامل) باشد
      example 1 = غیرفعال کردن موقت برخی گزینه‌ها تا شرایط خاصی برقرار شود
      example 2 = با فرم ارسال نمی‌شوند disabled جلوگیری از ارسال برخی فیلدها با فرم (فیلدهای 
      example 3 = نمایش گزینه‌هایی که فعلاً در دسترس نیستند
      example 4 = ایجاد تفاوت بصری بین عناصر فعال و غیرفعال
    Values:
    Important Tags = این اتریبیوت برای عناصر فرم‌ها استفاده می‌شود
      input - textarea - select - button - fieldset - optgroup - option
    SEO = محتوای این عناصر معمولاً در ایندکس شدن صفحه تأثیر چندانی ندارد
    SEO Point =
      1- معمولاً توسط کراولرها نادیده گرفته می‌شوند
      2- از نظر دسترسی (accessibility): توسط خوانندگان صفحه خوانده می‌شوند
      3- تکیه کرد، چون کاربران می‌توانند آن را در ابزار توسعه‌دهنده تغییر دهند disabled برای اطلاعات مهم نباید فقط به
  =-= autofocus
    Abbreviation(autofocus) {auto-focus} => تمرکز خودکار
    Target: این اتریبیوت مشخص می‌کند که عنصر باید به طور خودکار هنگام بارگذاری صفحه فوکوس (تمرکز) بگیرد
      example 1 = تمرکز خودکار روی اولین فیلد فرم‌های ورود داده
      example 2 =با هدایت سریع کاربر به نقطه تعامل اصلی UX بهبود 
      example 3 = برای تمرکز روی فیلدهای جستجو (SPA) در برنامه‌های تک صفحه‌ای 
      example 4 = در رابط‌های خط فرمان مبتنی بر وب
    Values: none
    Important Tags =
    SEO = تأثیر مستقیمی بر رتبه‌بندی ندارد
    SEO Point =
      1- تأثیر بگذارد (Core Web Vitals) ممکن است بر معیارهای تجربه کاربری
        - (کاهش FID) می‌تواند ورود سریع‌تر به صفحه را تسهیل کند
        - ممکن است در برخی دستگاه‌های موبایل باعث مشکلاتی در نمایش صفحه کلید شود
      2- بهتر است در صفحاتی که محتوای اصلی متنی دارند استفاده نشود تا خواندن محتوا را مختل نکند
      3- در فرم‌های جستجو بسیار مفید است
  =-= required
    Abbreviation{required} => الزامی
    Target: کند (submit) مشخص میکند که یک فیلد فرم باید پر شود قبل از اینکه کاربر بتواند فرم را ارسال
      ✅ اعتبارسنجی سمت کلاینت (بدون نیاز به جاوااسکریپت)  
      ✅ اجباری کردن فیلدهای ضروری (مثل ایمیل، رمز عبور، نام کاربری)  
      ✅ کاهش خطاهای فرم قبل از ارسال به سرور  
      ✅ با نمایش پیام خطای خودکار مرورگر UX بهبود 
    Values: none
    Important Tags = 🚀 select - input - textarea
    SEO = تأثیر مستقیم روی سئو ندارد
    SEO Point =
      🔹 کمک به کراولرها برای درک ساختار فرم‌های مهم (مثلاً فرم ثبت‌نام یا تماس).  
      🔹 بهتر است همراه با پیام‌های خطای مناسب باشد تا کاربران متوجه شوند چرا فرم ارسال نمیشود.  
      🔹 میتواند از اسپم جلوگیری کند required در فرم‌های ورود و ثبت‌نام، استفاده از 
===========================================================================================
) tags -  table
    tag = table
    tag = tr
    tag = th 
    tag = td
    tag = caption
    tag = colgroup
  =-= table
    Abbreviation{table} => جدول
    Attached file: true
    Usage: برای نمایش داده های جدولی و ماتریسی استفاده می شود
    Properties =
      level:
      Target: ایجاد جدول
        example 1 = مقایسه محصولات
        example 2 = نمایش اطلاعات مالی
        example 3 = برنامه های زمانی
        example 4 = نتایج ورزشی
        example 5 = هر نوع داده ای که رابطه سطر و ستون دارد
      Display: متن سیاه و بدون بٌردر / بستگی یه استایل هیی دارد که بهش میدی
    Meaning: محتوای جدولی
    Important Attributes =
      1- border: تعیین ضخامت خطوط جدول
      2- cellpadding: فضای داخلی سلول ها
      3- cellspacing: فاصله بین سلول ها
      4- width: عرض جدول
      5- summary: توضیح خلاصه جدول (برای دسترسی پذیری)

    SEO =
     مثبت
      1- استفاده صحیح از جداول برای نمایش داده های ساختاریافته می تواند به درک بهتر محتوا توسط موتورهای جستجو کمک کند.
     منفی
      2- داشته باشد SEO می تواند تاثیر منفی بر (Layout) استفاده نادرست از جداول برای چیدمان صفحه
    SEO Point =
      1- فقط برای داده های جدولی واقعی استفاده شود
      2- استفاده کنید <thead>, <tbody>, <th> از تگ های معنایی مثل 
      3- برای هدرهای ستون و سطر استفاده کنید scope از ویژگی
      4- برای توضیح جدول استفاده کنید caption از ویژگی
      5- (کمتر استفاده می شود HTML5 در) برای توضیح مختصر جدول summary از ویژگی
  =-= tr - th - td
    Abbreviation(tr) {Table Row} => سطر جدول
    Abbreviation(th) {Table Header} => هدر جدول
    Abbreviation(td) {Table Data} => داده جدول
    Attached file: true
    tr properties =
      level: 
      Target: عریف یک سطر در جدول استفاده می‌شود
      Display: ردیف در جدول
    tr Meaning: نشان‌دهنده یک رکورد یا مجموعه‌ای از داده‌های مرتبط در جدول است
    th properties =
      level:
      Target: تعریف سلول‌های عنوان در جدول
      Display: متن درونش یکمی پررنگ میشود
    th Meaning: معمولاً در اولین سطر جدول برای عنوان ستون‌ها یا اولین ستون برای عنوان سطرها استفاده می‌شود
    td properties =
      level:
      Target: تعریف سلول‌های معمولی جدول که حاوی داده هستند
      Display: بدون تغییر متن
    td Meaning: محتوای اصلی جدول
    (th,td) Important Attributes =
      1- colspan: ادغام افقی سلول‌ها
      2- rowspan: ادغام عمودی سلول‌ها
      3- headers: ارتباط با هدرهای مربوطه
    (th) Important Attributes =
      1- scope: تعیین دامنه هدر (col/row/colgroup/rowgroup)
      2- abbr: ارائه نسخه مختصر از عنوان
    SEO =
     مثبت
      1- استفاده صحیح به موتورهای جستجو کمک می‌کند ساختار داده‌ها را بهتر درک کنند
     منفی
      1- استفاده نادرست (مثل استفاده برای چیدمان صفحه) می‌تواند تأثیر منفی داشته باشد
    SEO Point =
      1- برای عناوین ستون‌ها/سطرها استفاده کنید <th> همیشه از
      2- استفاده کنید <th> در scope از اتریبیوت
        1. scope="col" برای عنوان ستون
        2. scope="row" برای عنوان سطر
      3- مربوطه استفاه میشود <th> برای ارتباط با <td> در headres از اتریبیوت
      4- استفاده کنید id, header برای داده های پیچیده از اتریبیوت 
  =-= caption
    Abbreviation(caption) {Table Caption} => عنوان جدول / توضیح جدول
    Attached file: true
    Properties =
      level:
      Target: ارائه عنوان یا توضیح مختصری درباره محتوای جدول
      Display: بالای جدول نمایش داده میشود
    Meaning: به موتورهای جستجو کمک می‌کند محتوای جدول را بهتر درک کنند
    SEO =
     مثبت
      1- ارتباط معنایی بین جدول و محتوای صفحه را تقویت می‌کند
      2- می‌تواند برای کلمات کلیدی مرتبط استفاده شود
     منفی
      1- استفاده نادرست (مثل تکرار کلمات کلیدی) ممکن است اثر منفی داشته باشد
    SEO Point =
      1- قرار دهید <table> و بلافاصله بعد از شروع تگ <table> همیشه داخل تگ
      2- متن مختصر اما توصیفی انتخاب کنید
      3- از کلمات کلیدی مرتبط به صورت طبیعی استفاده کنید
      4- از توضیحات طولانی خودداری کنید
      5- برای جداول پیچیده، توضیح واضحی ارائه دهید
    Point =
      1- برای توضیح جامع محتوای جدول استفاده شده <caption> از
      2- عنوان به صورت توصیفی و حاوی کلمات کلیدی مرتبط است
      3- (caption-side: top;) تنظیم میشود CSS با <caption> موقعیت
  =-= colgroup
    Abbreviation(colgroup) {Column Group} => گروه ستون ها
    Attached file: true
    Properties =
      level:
      Target: برای گروه‌بندی و اعمال سبک به مجموعه‌ای از ستون‌ها در جدول
      Display: روی جدول های مربوطه سبک هاش قابل مشاهست
    Meaning: کمک به موتورهای جستجو برای درک روابط بین ستون‌ها
    Important Attributes =
      1- span: تعداد ستون‌هایی که گروه باید شامل شود (پیش‌فرض=1)
      2- width: (تنظیم شده CSS منسوخ شده، بهتر است با HTML5 در) عرض گروه ستون‌ها
      3- align 4- char 5- charoff 6- valign (منسوخ شده اند HTML5 همگی در)
    SEO = غیرمستقیم
      1- بهبود ساختار جدول و خوانایی کد
    SEO Point =
      1- برای تعریف خصوصیات هر گروه ستون <col> همراه با تگ
      2- برای مشخص کردن تعداد ستون‌های گروه استفاده کنید span از اتریبیوت
      3- برای جداول ساده از آن استفاده نکنید / فقط برای جداول پیچیده با گروه‌بندی ستون‌های واضح استفاده شود
    Point =
===========================================================================================
) Attributes - table
    attribute = multiple
    attribute = palceholder
    attribute = size
    attribute = bgcolor
    attribute = rowspan
    attribute = open
  =-= multiple
    Abbreviation{multiple} => چندتایی/چندگانه
    Attached file: true
    Properties =
      Target: این اتریبیوت نشان می‌دهد که کاربر می‌تواند بیش از یک مقدار یا گزینه را انتخاب کند
        example 1 = آپلود چندین فایل به صورت همزمان
        example 2 = انتخاب چندین آیتم از لیست
        example 3 = وارد کردن چندین ایمیل در یک فیلد ورودی
    Values: none
    Important Tags =
      1- <input type="file">: برای انتخاب چندین فایل
      2- <input type="email">: برای وارد کردن چندین آدرس ایمیل
      3- <select>: برای انتخاب چندین گزینه از لیست dropdown
    SEO = کمک کند SEO میتواند به UX بهبود
    SEO Point =
      1- سرعت بارگذاری: آپلود چند فایل با یک بار ارسال فرم می‌تواند سرعت را بهبود بخشد
      2- ساختار داده: سازماندهی بهتر داده‌های ورودی کاربر
      3- دسترسی پذیری: باید با برچسب‌های مناسب همراه باشد تا برای خوانندگان صفحه قابل فهم باشد
  =-= palceholder
    Abbreviation{palceholder} => متن نگهدارنده/نوشته راهنما
    Attached file: true
    Properties =
      Target: این متن به کاربر نشان می‌دهد که چه نوع محتوایی باید در فیلد مربوطه وارد کند.
        example 1 = نمایش راهنمای ورودی در فیلدهای فرم
        example 2 = نشان دادن فرمت مورد انتظار برای ورودی
        example 3 = ارائه مثال از محتوای مورد نیاز
        example 4 = جایگزین ساده برای برچسب
      Display: متن کمرنگ و خاکستری که با کلیک روی فیلد خود به خود نابود شده و در صورت خالی رها کردن فیلد باز نمایش داده میشود
    Values: متن یا عدد
    Important Tags = input - textarea
    SEO = غیر مستقیم و با تجربه کاربری
    SEO Point =
      1- نیست label جایگزین: همراه با این اتریبیوت استفاده شود <label> بهتر است همیشه از تگ SEO برای
      2- محتوا نباید ضروری باشد: را ایندکس نکنند palceholder موتورهای جستجو ممکن است محتوای
      3- رنگ کم‌کنتراست: ممکن است برای برخی کاربران قابل مشاهده نباشد
      4- دسترسی‌پذیری: رانخوانند placeholder ممکن است همیشه Screen Readers
  =-= size
    Abbreviation{size} => اندازه
    Attached file: true
    Properties =
      Target: تعیین عرض عنصر (بر حسب کاراکترها برای فیلدهای متنی یا آیتم‌ها برای لیست‌ها)
        example 1 = تعیین عرض فیلدهای ورودی متنی (بر اساس تعداد کاراکترهای تقریبی)  
        example 2 = کنترل تعداد گزینه‌های قابل مشاهده در 
        example 3 = با تنظیم اندازه مناسب برای فیلدها UX بهبود
    Values: number
    Important Tags = input - select
    SEO = عدم تأثیر مستقیم بر رتبه‌بندی
    SEO Point =
      ⚠مشکلات دسترسی: اگر اندازه فیلدها خیلی کوچک باشد، ممکن است کاربران در تایپ مشکل داشته باشند.  
      📌 برای طراحی واکنش‌گرا CSS ترجیح: برای کنترل دقیق‌تر اندازه استفاده شود CSS در width / max-width بهتر است از
  =-= bgcolor
    Abbreviation(bgcolor) {background color} => رنگ زمینه
    Attached file: true
    Target: این اتریبیوت به تگ‌های خاصی اضافه می‌شود تا رنگ پس‌زمینه آن عنصر را مشخص کند
    Display: روی بک گراند عناصر قابل مشاهده است
    Values: مقادیر رنگی
    Important Tags = td - tr - table - body
    SEO = تأثیر غیر مستقیم
    SEO Point =
      1- انتخاب بهتری است CSS دیگر توصیه نمی‌شود زیرا HTML5 در
      2- تجربه کاربری: SEO رنگ‌بندی مناسب و کنتراست خوانا به ایجاد تجربه  کاربری انطباقی کمک می‌کند. بهینه‌سازی تجربه کاربری می‌تواند به
  =-= rowspan
    Abbreviation(rowspan) [Row => سطر, Span => ادغام/گسترش]
    Attached file: true
    Properties =
      Target: باید در بر بگیرد (<th> or <td>) تعیین تعداد سطرهایی که یک سلول جدول
        example 1 = ادغام عمودی سلول‌ها در جدول  
        example 2 = ساخت ساختارهای جدولی پیچیده (مثل گزارش‌ها، داشبوردها)  
        example 3 = کاهش تکرار داده‌ها در سطرهای تکراری  
    Values: number
    Important Tags = td - th
    SEO = تأثیر غیرمستقیم
    SEO Point =
      1- ساختار منظم داده‌ها: کمک به خزنده‌ها برای درک بهتر محتوا  
      2- استفاده نادرست: اگر بیش‌ازحد پیچیده شود، ممکن است خوانایی را کاهش دهد  
      3- ⚠دسترسی (Accessibility): ترکیب شود تا برای صفحه‌خوان‌ها قابل فهم باشد headers یا scope باید با
      4- 📌جایگزین‌های مدرن: بهتر است Angular/React مثل Table-Component-Basez یا CSS Grid/Flexbox برای داده‌های پیچیده، گاهی یا
  =-= open
    Abbreviation{open} => باز/گشوده
    Attached file: true
    Properties =
      Target: نشان می‌دهد که المان مربوطه باید در حالت باز/نمایش داده شده رندر شود
        example 1 = بدون نیاز به کلیک <datails> نمایش پیش‌فرض محتوای
        example 2 = هنگام بارگذاری صفحه <dialog> نمایش خودکار پنجره‌های
        example 3 = بهبود تجربه کاربری با نمایش سریع اطلاعات مهم
      Display:
    Values:
    Important Tags =
    SEO = غیر مستقیم
    SEO Point =
      1- توسط خزنده‌ها ایندکس می‌شوند open محتویات باز شده توسط
      2- ⚠استفاده بیش از حد ممکن است بار صفحه را افزایش دهد
    Point =
      1- باید با احتیاط استفاده شود تا باعث شلوغی صفحه نشود
      2- ابزاری مفید برای نمایش محتوای مهم بدون نیاز به تعامل کاربر
===========================================================================================
) tags - list 1
    tag = ol
    tag = li 
    tag = ul
  =-= ol
    Abbreviation(ol) {Ordered List} => لیست مرتب/شماره‌دار
    Attached file: true
    Properties =
      level: block
      Target: ایجاد لیست‌هایی که ترتیب آیتم‌ها مهم است
        example 1 = (Step-by-Step) نمایش مراحل انجام کار
        example 2 = لیست‌های آموزشی با ترتیب مشخص
        example 3 = رتبه‌بندی‌ها و اولویت‌ها
        example 4 = دستورالعمل‌های برنامه‌نویسی
        example 5 = فهرست‌های عددی
      Display: لیستی که هر ایتم ترتیبی مشخص دارد
    Meaning: کمک به موتورهای جستجو برای درک سلسله مراتب اطلاعات
    Important Attributes =
      1- type: نوع شماره‌گذاری:(1, A, a, I, i)
      2- start: عدد شروع لیست
      3- reversed: لیست معکوس (از آخر به اول)
      4- compact: (HTML5 منسوخ شده در)
    SEO =
     مثبت
      1- بهبود ساختار محتوا و خوانایی
      2- در نتایج جستجو (How-to) مناسب برای نمایش چگونه انجام دهیم
     منفی
      1- استفاده نادرست (برای محتوای غیرلیستی) می‌تواند اثر منفی داشته باشد
    SEO Point =
      1- فقط برای محتوای واقعاً ترتیبی استفاده شود
      2- برای هر آیتم استفاده شود <li> همراه با
      3- برای لیست‌های معکوس استفاده شود reversed از اتریبیوت
      4- برای شروع از عدد خاص استفاده شود start از اتریبیوت
      5- استفاده شود schema.org/HowTo بریا مراحل هم از
    Point =
  =-= li
    Abbreviation(li) {List Item} => آیتم لیست
    Attached file: true
    Properties =
      level:
      Target: تعریف یک آیتم در لیست‌
        example 1 = ایجاد آیتم‌های لیست در منوها
        example 2 = نمایش ویژگی‌های محصول
        example 3 = فهرست مراحل آموزشی
      Display: یکی از ایتم های یک لیست و بدون تغیر خاص
    Meaning: کمک به موتورهای جستجو برای درک بهتر روابط بین آیتم‌ها
    Important Attributes =
      1- value: (<ol> فقط در) برای لیست‌های مرتب، مقدار عددی آیتم را تعیین می‌کند
      2- type (منسوخ شده): نوع نشانگر لیست
    SEO =
     مثبت
      1- بهبود ساختار محتوا و خوانایی
      2- امکان نمایش به صورت لیست‌های غنی در نتایج جستجو
     منفی
      1- استفاده نابجا (برای محتوای غیرلیستی) می‌تواند اثر منفی داشته باشد
    SEO Point =
      1- استفاده شود <ol> یا <ul> همیشه داخل تگ‌های
      2- برای لیست‌های تو در تو از ساختار سلسله مراتبی استفاده شود
      3- از کلمات کلیدی به صورت طبیعی در متن آیتم‌ها استفاده شود
      4- استفاده شود <h2>-<h6> همراه با تگ‌های معنایی دیگر مثل
    Point =
  =-= ul
    Abbreviation(ul) {Unordered List} => لیست نامرتب
    Attached file: true
    Properties =
      level: block
      Target: برای ایجاد لیستی از آیتم‌ها استفاده می‌شود که ترتیب خاصی ندارند 
      Display: هر ایتم در اولش یک شکل که شروع ایتم را معلوم میکند نمایش داده میشود
    Meaning: لیستی که ترتیب خواصی ایتم ها ندارند
    SEO =
      1- ساختار منظمی به محتوا می‌دهد و به خزنده‌های موتورهای جستجو کمک می‌کند ارتباط بین آیتم‌ها را درک کنند
      2- لیست‌ها خوانایی محتوا را افزایش می‌دهند (امتیاز غیرمستقیم سئو).  
      3- میتواند سئو را مختل کند (<ul> استفاده نادرست (مثل قرار دادن محتوای غیرلیستی در
    SEO Point =
      1- فقط برای محتوای لیستی استفاده شود.  
      2- برای آیتم ها استفاده کنید <li> از 
      3- از کلمات کلیدی مرتبط در متن آیتم‌ها استفاده کنید (بدون اسپم).
      4- استفاده کنید تا موتورهای جستجو رابطه ترتیبی را درک کنند. <ol> اگر لیست شما ترتیب منطقی دارد (مثل مراحل آموزش)، از 
    Point =
      1- استفاده از لیست‌های تودرتو Nested Lists
        می‌توانید لیست‌ها را برای ساختارهای پیچیده‌تر تودرتو کنید. این برای منوهای چندسطحی یا دسته‌بندی‌ها عالی است.
      2- بهینه‌سازی برای دسترسی‌پذیری Accessibility
        1- (Screen Readers) به لیست‌ها برای کمک به صفحه‌خوان‌ها  role="list" یا aria-label افزودن
        2- (غیر سمانتیک است) خودداری کنید <ul> درون <span> یا <div> برای آیتم‌ها استفاده کنید و از تگ‌های  <li> از
      3- CSS تأثیر ظاهری با 
        آن را تغییر دهید CSS دارند اما می‌توانید با (disc) نقاط سیاه <ul>	به‌صورت پیش‌فرض، لیست‌های 
    Difference(ol & dl) = 
      -<ol>: لیست‌های **مرتب** (با اعداد/حروف).
      -<dl>: لیست‌های **تعریفی** (مثل فرهنگ لغت).
===========================================================================================
) tags = External files
    tag = iframe
    tag = embed
===========================================================================================
) tags - Multimedia
    tag = audion
    tag = source
    tag = video
    tag = canvas

===========================================================================================
) Attributes - Multimedia
    attribute = controls
    attribute = autoplay
    attribute = loop
  =-= controls
    Abbreviation{controls} => کنترل‌ها
    Attached file: true
    Properties =
      Target: نمایش کنترل‌های پخش رسانه برای عناصر چندرسانه‌ای فعال می‌کند
        1- پخش ویدیو/صدا با کنترل‌های پیش‌فرض مرورگر
        2- پیشرفته JavaScript ساده‌سازی پیاده‌سازی پخش چندرسانه‌ای بدون نیاز به 
      Display: نمایش دکمه پخش / مکث / صدا / بزرگ و کوچک کردن صفحه
    Values: بدون مقدار (فقط وجودش کافی است) → فعال می‌شود  
    Important Tags = این ویژگی مخصوص تگ‌های رسانه‌ای است
      1- <audio> : برای فایل‌های صوتی
      2- <video> : برای فایل‌های ویدیویی
    SEO = تأثیر مثبت
      1- (Bounce Rate) → کاهش نرخ پرش  (UX) بهبود تجربه کاربری 
      2- افزایش زمان ماندگاری کاربر در صفحه (موتورهای جستجو این را دوست دارند)  
      3- پشتیبانی از ایندکس کردن محتوای رسانه‌ای (گوگل می‌تواند ویدیوها را بهتر درک کند)
    SEO Point = استفاده کنید controls برای سادگی و سئوی بهتر، از 
    Point =
     جایگزین‌های سفارشی‌سازی شده
      1- برای ساخت کنترل‌های شخصی‌سازی شده استفاده کنید JavaScript + CSS از
      2- استفاده کنید Plyr یا Video.js از کتابخانه‌هایی مثل
  =-= autoplay
    Abbreviation(autoplay) {auto play} => پخش خودکار
    Attached file: true
    Properties =
      Target: مشخص می‌کند که یک رسانه (صوتی یا تصویری) باید بلافاصله پس از بارگذاری صفحه شروع به پخش کند
        example 1 = پخش خودکار ویدیوهای پس‌زمینه
        example 2 = پخش خودکار موسیقی یا افکت‌های صوتی
        example 3 = نمایش تبلیغات ویدیویی به صورت خودکار
      Display: زمانی که یک مالتی مدیا خود به خود اجرا شود معلوم میشود
    Values: بدون مقدار (فقط وجود ویژگی کافی است)
    Important Tags = این ویژگی برای تگ‌های رسانه‌ای استفاده می‌شود:
      1- <audio> : (برای فایل‌های صوتی)
      2- <video> : (برای فایل‌های ویدیویی)
    SEO = منفی
      1- ممکن است تجربه کاربری را مختل کند (خصوصاً در موبایل)
      2- به دلیل آزاردهنده بودن (Bounce Rate) افزایش نرخ پرش
      3- در بسیاری از مرورگرها، پخش خودکار صدا مسدود می‌شود
      4- مصرف پهنای باند و کاهش سرعت صفحه
    SEO Point =
      1- اگر به درستی استفاده شود می‌تواند تعامل کاربر را افزایش دهد
      2- برای ویدیوهای پس‌زمینه بدون صدا مفید است
      3- استفاده شود muted همراه با
      4- فقط برای ویدیوهای کوتاه و مرتبط استفاده شود
      5- ترجیحاً از پخش خودکار صدا خودداری شود
      6- برای محتوای اصلی صفحه استفاده نشود
    Point =همراه شود muted در مرورگرهای مدرن، پخش خودکار صدا معمولاً مسدود می‌شود مگر با 
  =-= loop
    Abbreviation{loop} => حلقه
    Attached file: true
    Properties =
      Target: یک ویژگی بولین است که باعث می‌شود محتوای رسانه‌ای به طور مداوم و بی‌نهایت تکرار شود.
        example 1 = پخش مداوم موسیقی پس‌زمینه
        example 2 = نمایش ویدیوهای تبلیغاتی به صورت چرخشی
        example 3 = ایجاد افکت‌های بصری تکراری
        example 4 = ( <marquee> نمایش اسلایدهای خودکار (در تگ منسوخ شده 
      Display: زمنی که یک مدیا خود به خود تکرار شود
    Values: بدون مقدار (فقط وجود ویژگی کافی است)
    Important Tags =این ویژگی برای این تگ‌ها استفاده می‌شود:
      1- <audio> : (برای فایل‌های صوتی)
      2- <video> : (برای فایل‌های ویدیویی)
      3- <marquee>
    SEO =
     منفی
      1- ممکن است باعث افزایش نرخ پرش شود (اگر کاربر را آزار دهد)
      2- مصرف منابع سیستم و پهنای باند را افزایش می‌دهد
      3- برای محتوای اصلی صفحه مناسب نیست (ممکن است توسط موتورهای جستجو بی‌اهمیت تلقی شود)
     مثبت
      1- برای موسیقی/ویدیوهای پس‌زمینه کوتاه می‌تواند مفید باشد
      2- در برخی موارد می‌تواند تعامل کاربر را افزایش دهد
    SEO Point =
      1- برای دسترسی‌پذیری بهتر، باید کنترل توقف در اختیار کاربر قرار گیرد
      2- JavaScript جایگزین مدرن با 
    Point =
      1-برای محتوای کوتاه (کمتر از 30 ثانیه) مناسب‌تر است
      2- در صورت امکان، کنترل توقف/شروع در اختیار کاربر قرار گیرد
      3- برای محتوای اصلی صفحه توصیه نمی‌شود
===========================================================================================
) tag = marquee
  =-= marquee
    Abbreviation{marquee} => سَرکِش
    Attached file: true
    Properties =
      level:
      Target: ایجاد متن یا محتوای متحرک (اسکرول، لغزان، یا چشمک‌زن) 
        example 1 = نمایش متن‌های متحرک مانند اعلان‌های مهم، تبلیغات، یا تیترهای خبری
      Display: عنصر متحرک
    Meaning:
    Important Attributes =
      1- direction: جهت حرکت (left, right, up, down)
      2- behavior: نوع حرکت (scroll, slide, alternate)
      3- scrollamount: سرعت حرکت (عدد بالاتر = سریع‌تر).  
      4- loop: تعداد دفعات تکرار
    SEO =
     منفی
      1- موتورهای جستجو ممکن است محتوای داخلش را کم احمیت تلقی میکنند
      2- شود (Bounce Rate) را مختل کند و باعث افزایش نرخ پرش  UX حرکت مداوم می‌تواند تجربه کاربری 
     بهینه 
      3- اگر استفاده شود، محتوای آن باید کوتاه و مرتبط باشد
    SEO Point =
      1- <marquee> اجتناب از استفاده
     اگر مجبور به استفاده هستید:
      2- برای حرکت رفت‌وبرگشتی استفاده کنید (کمتر آزاردهنده است).   behavior="alternate" از ویژگی 
      3- محتوای داخل آن را تکراری نکنید (مثلاً برای نمایش یک پیام فوری ولی کوتاه). 
    Point =
      1- منسوخ شده: استفاده شود CSS & JavaScript پشتیبانی نمی‌شود و توصیه می‌شود به جای آن از  HTML5 این تگ در
     جایگزین‌های مدرن
      2- برای متن متحرک: استفاده کنید React Marquee یا کتابخانه هایی مثل CSS Animation (@keyframes) از 
      3- برای اسلایدشوها: Swiper یا Slick  با جاوااسکریپت مثل  Carousel
     مشکلات تجربه کاربری
      4- آزاردهنده است ADHD متن‌های متحرک برای کاربران دارای مشکلات توجه (مثل 
      5- ناسازگار باشد.   (Screen Readers) ممکن است با خوانندگان صفحه 
     استثنا
      6- اگر برای شبیه‌سازی محیط‌های قدیمی (مثل وب‌سایت‌های دهه ۹۰) استفاده می‌کنید، قابل قبول است!
     هشدار
      7- ممکن است در مرورگرهای جدید به طور کامل حذف شود همیشه از استانداردهای روز استفاده کنید!
===========================================================================================
) Attributes - marquee
    attribute = direction
    attribute = behavior
    attribute = scrollamount
    attribute = scrolldelay
  =-= direction
    Abbreviation{direction} => جهت
    Attached file: true
    Usage: تعیین و تغییر جهت نمایش متن
    Properties =
      Target: مشخص کردن جهت نمایش متن
         example 1 = برای زبان‌های راست به چپ مثل فارسی و عربی
         example 2 = زمانی که می‌خواهید بخشی از صفحه برخلاف جهت کلی صفحه نمایش داده شود
         example 3 = برای فیلدهای ورودی که ممکن است محتوای دو زبانه داشته باشند
      Display: بر روی جهت نمایش متن تاثیر میگذارد
    Values =
      1- ltr :
        Abbreviation(ltr) {Left To Right} => چپ به راست
        Default mode = true
      2- rtl
        Abbreviation(rtl) {Right To Left} => راست به چپ
      3- auto : مرورگر خودش جهت را تشخیص می‌دهد
    Important Tags = 1-div 2-p 3-span 4-input 5-textarea 6-table 7-marquee
      بهطور کلی هر تگی که محتوای متنی دارد
    SEO = غیرمستقیم
    SEO Point =
      1- ساختار صحیح صفحه: استفاده صحیح ازش به موتورهای جستجو کمک می‌کند ساختار صفحه را بهتر درک کنند.
      2- تجربه کاربری: تاثیر می گذارد SEO که به طور غیرمستقیم بر  UX بهبود 
      3- محتواهای چندزبانه: برای سایت‌های چندزبانه بسیار مهم است.
      4- عدم استفاده نادرست: استفاده نادرست ممکن است باعث سردرگمی خزنده‌های موتورهای جستجو شود.
    Point =
      1- برای تعیین جهت استفاده کنید CSS بهتر است از HTML5 در
      2- تعیین میشود <body> یا <html> رای کل صفحه معمولا در تگ
      3- پیشنهاد میشود lang ترکیب با
      4- در فرم ها ممکن است جهت اعداد نیاز به تنظیمات جداگانه داشته باشند
      5- مرورگرهای مدرن معمولاً جهت را به طور خودکار تشخیص می‌دهند، اما مشخص کردن آن توصیه می‌شود.
  =-= behavior
    Abbreviation{behavior} => رفتار
    Attached file: true
    Properties =
      Target: کنترل میکند <marquee> رفتار حرکتی متن را در تگ 
        1- ایجاد متن متحرک در صفحات وب (که امروزه توصیه نمی‌شود)
        2- نمایش اطلاعیه‌های مهم به صورت متحرک
      Display: تاثیر دارد <marquee> در شیوه رفتار متن درون تگ
    Values:
      1- scroll: متن از یک سمت وارد شده و از سمت دیگر خارج می‌شود
        Default mode: true
      2- slide: متن از یک سمت وارد شده و در انتها متوقف می‌شود
      3- alternate: متن بین دو انتها به جلو و عقب حرکت می‌کند
    Important Tags = است HTML5 استفاده می‌شود که یک تگ منسوخ شده در  <marquee> این ویژگی منحصراً برای تگ 
    SEO =تأثیر منفی
      داشته باشد SEO می‌تواند تأثیر منفی روی  behavior و <marquee> استفاده از 
    SEO Point =
      1- ممکن است توسط موتورهای جستجو به عنوان اسپم تفسیر شود
      2- باعث کاهش سرعت بارگذاری صفحه می‌شود
      3- می‌تواند تجربه کاربری را مختل کند
    Point =
      1- منسوخ شده HTML5 در behavior و ویژگی <marquee> تگ
      2- استفاده کنید JavaScript و CSS برای اثرات مشابه، از 
      3- این تگ ممکن است در برخی مرورگرهای مدرن پشتیبانی نشود.
      4- برای کاربر شود (accessibility) استفاده از آن ممکن است باعث مشکلات دسترسی 
  =-= scrollamount
    Abbreviation(scrollamount) {scroll amount} => مقدار اسکرول
    Attached file: true
    Properties =
      Target: کنترل میکند <marquee> سرعت حرکت متن را در تگ
        1- <marquee> کنترل سرعت متن متحرک در 
        2- ایجاد افکت‌های تبلیغاتی یا اطلاع‌رسانی متحرک (امروزه توصیه نمی‌شود)
      Display: تاثیر میگذارد <marquee> بر روی سرعت حرکت متن تگ
    Values:	یک عدد صحیح مثبت
      Default mode = 6
    Important Tags = شده است (deprecated) منسوخ HTML5 کاربرد دارد که در <marquee> این ویژگی فقط برای تگ 
    SEO = تأثیر منفی روی سئو دارد
      1- ممکن است به عنوان اسپم یا محتوای آزاردهنده شناسایی شود
      2- سرعت بارگذاری صفحه را کاهش می‌دهد (بهینه نیست).  
      3- را خراب می‌کند (متن‌های متحرک حواس کاربر را پرت می‌کنند) UX تجربه کاربری 
    SEO Point =
     جایگزین‌های بهتر برای سئو
      1- JavaScript یا CSS Animation استفاده از 
        example: CSS در @keyframes
      2- نمایش متن‌های مهم به صورت ثابت یا با انیمیشن‌های سبک
    Point =
      1- پشتیبانی نمیشود و استفاده از آن توصیه نمیشود HTML5 در
      2- در مرورگرهای جدید ممکن است به درستی کار نکند
      3- برای کاربران دارای معلولیت (مثل مشکلات بینایی یا تمرکز) مشکل ساز است
  =-= scrolldelay
    Abbreviation(scrolldelay) {scroll delay} => تأخیر در اسکرول
    Attached file: true
    Properties =
      Target: را بر حسب میلی‌ثانیه مشخص می‌کند <marquee> مدت زمان تأخیر بین حرکات متوالی متن در تگ
        1- <marquee> کنترل سرعت نرم‌تر حرکت متن در 
        2- ایجاد افکت‌های متحرک با سرعت قابل تنظیم (امروزه توصیه نمی‌شود)
      Display: روی تاخیر بین حرکات متوالی تاثیر دارد
    Values: عددی بر حسب میلی‌ثانیه 
      Default mode = 85
    Important Tags = شده است (deprecated) منسوخ HTML5 کاربرد دارد که در <marquee> این ویژگی فقط برای تگ
    SEO = تأثیرات منفی
      1- بارگذاری سنگین‌تر صفحه
      2- مشکلات دسترسی (برای کاربران با نیازهای خاص مشکل ایجاد می‌کند)
      3- تجربه کاربری ضعیف (ممکن است باعث حواس‌پرتی کاربر شود)
      4- کاهش امتیاز سئو (موتورهای جستجو محتوای متحرک را کمتر ایندکس می‌کنند)
    SEO Point =
     جایگزین‌های بهینه
      1- CSS Animations استفاده از
      2- برای انیمیشن‌های کنترل‌شده JavaScript استفاده از
      3- GSAP استفاده از کتابخانه‌های مدرن مانند
    Point =
      1- پشتیبانی نمی‌شود HTML5 در
      2- ممکن است نتایج غیرمنتظره ایجاد کند scrollamount ترکیب آن با
      3- در مرورگرهای مختلف رفتار یکسانی ندارد
      4- برای محتوای مهم اصلاً توصیه نمی‌شود
===========================================================================================
) tags = script
    tag = script
    tag = noscript
  =-= script
    Abbreviation{script} => اسکریپت
    Attached file: true
    Properties =
      level: none
      Target: اسفتاده میشود HTML برای افزودن کدهای اجرایی (عمدتاً جاوااسکریپت) به صفحه 
      Display: بسته به کد درون نمایش متفاوتی خواهد داشت
    Meaning:
    Important Attributes =
      1- src : آدرس فایل خارجی
      2- async : اسکریپت به صورت موازی بارگذاری و اجرا می‌شود (مناسب برای اسکریپت‌های مستقل مثل تحلیلی).  
      3- defer : (DOM اسکریپت پس از بارگذاری کامل صفحه اجرا می‌شود (مناسب برای اسکریپت‌های وابسته به 
      4- type : است "module" یا "text/javascript" معمولاً
    SEO =
     منفی:
      کردن رندر صفحه شود، سرعت لود را کاهش می‌دهد block اگر بیش‌ازحد استفاده شود یا اجرای آن باعث 
     مثبت:
      استفاده شود غیر مستقیم به سئو کمک میکند (و بهبود تعاملات lazy-loading مثل) اگر برای بهبود تجربه کاربری
    SEO Point =
      1- برای اسکریپت‌های غیرضروری اولیه استفاده کنید تا بارگذاری صفحه مسدود نشود defer یا async از
      2- قرار دهید، اما حجم آن‌ها کم باشد <head> در inline اسکریپت‌های حیاتی را 
      3- قرار دهید body اسکریپت‌های غیرحیاتی را در انتخای  
    Point =
      1- باشد src یا لینک به فایل‌های خارجی با  (inline) می‌تواند حاوی کدهای داخلی 
      2- خطاها: اسکریپت‌های معیوب ممکن است باعث توقف تجزیه صفحه توسط کراولرها شوند
      3- بهینه‌سازی: کنید (bundle) و در صورت امکان ادغام (minify) فایل‌های جاوااسکریپت را  فشرده
      4- سئو:  موتورهای جستجو می‌توانند جاوااسکریپت را اجرا کنند، اما محتوای کلیدی را تا حد امکان در فایبل اچ تی ام ال قرار دهید 
  =-= noscript
    Abbreviation(noscript) {no script} => بدون اسکریپت
    Attached file: true
    Properties =
      level: none
      Target: محتوای این تگ فقط زمانی نمایش داده می‌شود که جاوااسکریپت در مرورگر کاربر غیرفعال باشد  
        example 1 = ارائه محتوای جایگزین برای کاربرانی که جاوااسکریپت ندارند یا آن را غیرفعال کرده‌اند
        example 2 = fallback استفاده برای پیام‌های هشدار، محتوای استاتیک جایگزین، یا راه‌حل‌های 
      Display: بسته گی به محتوای درونش دارد
    SEO =
     مثبت:
      مرتبط و باکیفیت باشد، به موتورهای جستجو کمک می‌کند صفحه را بهتر درک کنند (مخصوصاً اگر اسکریپت‌ها برای رندر محتوای اصلی استفاده شده باشند) <noscript> اگر محتوای داخل 
     منفی:
      اگر محتوای تکراری یا اسپم داشته باشد، ممکن است توسط گوگل جریمه شوید
    SEO Point =
      1- محتوای داخلش باید معنادار و مکمل اسکریپت باشد
        example = یک جدول با داده‌های مشابه قرار دهید <noscript> اگر اسکریپت یک نمودار می‌سازد، در
      2- ازش برای توضیح نیاز به جاوااسکریپت به کاربران استفاده کنید (دوستانه و آموزشی).  
      3- خودداری کنید (کراولرها ممکن است آن‌ها را دنبال نکنند).   <noscript> از قرار دادن لینک‌های مهم در 
    Point =
      1- بهینه‌سازی: استفاده کنید Progressive Enhancement به جای آن از تکنیکt) برای نمایش تصاویر یا لینک‌های ضروری که توسط اسکریپت‌ها بارگذاری می‌شوند، استفاده نکنید  <noscript> از
      2- آمار کاربران: کمتر از ۱% کاربرانجاوااسکریپت را غیرفعال می‌کنند، اما همچنان مهم است (مخصوصاً برای سایت‌های حساس مثل بانکی).  
      3- تست: حالت بدون جاوااسکریپت را در مرورگر خود **غیرفعال کنید** و صفحه را بررسی نمایید.
===========================================================================================
) Attributes - script
    attribute = async
    attribute = defer
  =-= async
    Abbreviation(async) {asynchronous} => غیرهمزمان / ناهمگام
    Attached file: true
    Properties =
      Target: این ویژگی مشخص می‌کند که اسکریپت باید به صورت غیرمسدودکننده و مستقل از سایر فرآیندهای بارگذاری صفحه اجرا شود
        example 1 = برای اسکریپت‌های مستقل مانند تحلیلی (analytics)
        example 2 = اسکریپت‌های تبلیغاتی (Ad scripts)
        example 3 = ابزارهای ردیابی کاربران
        example 4 = ندارد DOM هر اسکریپتی که وابستگی به سایر اسکریپت‌ها یا
    Values: none
    Important Tags = است <script> این ویژگی مخصوص تگ
    SEO =
     مثبت
      1- (SEO بهبود سرعت بارگذاری صفحه (معیار مهم برای
      2- HTML جلوگیری از مسدود شدن تجزیه
      3- مناسب برای اسکریپت‌های غیرحیاتی که نیازی به اجرای فوری ندارند
     منفی
      4- اگر اسکریپت برای محتوای حیاتی باشد، ممکن است به موقع اجرا نشود
      5- ترتیب اجرا نامشخص است (ممکن است بر عملکرد صفحه تأثیر بگذارد)
      6- تأثیر منفی بگذارد اگر اسکریپت سنگین باشد Core Web Vitals ممکن است بر معیارهای
    Point =
      1- کار میکند (src با) فقط برای اسکریپت‌های خارجی async
      2- به محض آماده شدن اجرا می‌شوند، بدون توجه به ترتیب یا وضعیت بارگذاری صفحه async اسکریپت های
      3- یا سایر اسکریپت‌ها وابسته هستند مناسب نیست DOM برای اسکریپت‌هایی که به
      4- استفاده شود async از (Google Analytics مانند) بهتر است برای اسکریپت‌های شخص ثالث
    Difference(defer) = صبر می‌کنند اما ترتیب را حفظ می‌کنند HTML تا پایان تجزیه defer اسکریپت‌های
  =-= defer
    Abbreviation(defer) {defer execution} => تأخیر در اجرا
    Attached file: true
    Properties =
      Target:اجرا شود HTML این ویژگی مشخص می‌کند که اسکریپت باید پس از تجزیه کامل سند
        example 1 = نیاز دارد DOM زمانی که اسکریپت به المان‌های
        example 2 = وقتی اسکریپت وابستگی به سایر اسکریپت‌ها ندارد
        example 3 = برای بهبود عملکرد بارگذاری صفحه
    Values: none
    Important Tags = است <script> این ویژگی مخصوص تگ
    SEO =
     مثبت
      1- بهبود سرعت بارگذاری صفحه (معیار مهم برای SEO)
      2- جلوگیری از مسدود شدن تجزیه HTML (که می‌تواند بر رندر صفحه تأثیر بگذارد)
      3- حفظ ترتیب اجرای اسکریپت‌ها (برخلاف `async`)
     منفی
      4- اگر اسکریپت برای محتوای حیاتی صفحه ضروری باشد، تأخیر در اجرا ممکن است بر ایندکس شدن تأثیر بگذارد
    Point =
      1- کار میکند (src با) فقط برای اسکریپت‌های خارجی defer
      2- به ترتیب ظاهر شدن در صفحه اجرا می‌شوند defer اسکریپت‌های با
      3- استفاده کنید async یا defer بهتر است برای اسکریپت‌های تحلیل و ردیابی که ضروری نیستند از
      4- قرار گیرند <head> و در defer اسکریپت‌های مورد نیاز برای رندر اولیه بهتر است بدون
===========================================================================================
) Other tags
    tag = meta
    tag = figure
    tag = figcaption

===========================================================================================
## Gather more information
کتابخانه highlight به چه دردی میخورد آیا مفیده یا ضروری یا کاربردی

===========================================================================================
## END level 1 ##